{"version":3,"sources":["ng://virtual-repeat-angular-lib/lib/virtual-repeat-container.ts","null","ng://virtual-repeat-angular-lib/lib/virtual-repeat.ts","ng://virtual-repeat-angular-lib/lib/virtual-repeat-asynch.ts","ng://virtual-repeat-angular-lib/lib/virtual-repeat-angular-lib.module.ts"],"names":["VirtualRepeatContainer","Subscription","BehaviorSubject","SCROLL_STATE","IDLE","this","scrollbarStyle","scrollbarWidth","getScrollBarWidth","Object","defineProperty","prototype","_holderHeight","height","_this","listContainer","nativeElement","scrollTop","_initialScrollTop","setTimeout","holderHeight","_scrollStateChange","asObservable","_scrollPosition","_sizeChange","rowHeight","undefined","_rowHeight","Number","_heightAutoComputed","_autoHeight","p","next","ngAfterViewInit","style","right","paddingRight","window","_subscription","add","fromEvent","subscribe","requestMeasure","pipe","filter","ignoreScrollEvent","map","scrollY","scrollPosition","tap","currentScrollState","SCROLLING","debounceTime","ngOnDestroy","unsubscribe","measure","rect","getBoundingClientRect","_containerWidth","width","_containerHeight","_a","Component","args","selector","template","styles","ViewChild","Output","Input","inner","document","createElement","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__extends","__","constructor","create","VirtualRepeat","_virtualRepeatContainer","_differs","_template","_viewContainerRef","_super","call","tslib_1.__extends","_trackByFn","fn","isDevMode","console","warn","JSON","stringify","value","ngOnChanges","changes","currentValue","_differ","find","e","Error","getTypeNameForDebugging","ngDoCheck","diff","virtualRepeatOf","applyChanges","_collection","isMeasurementRequired","forEachOperation","item","adjustedPreviousIndex","currentIndex","previousIndex","splice","forEachIdentityChange","record","requestLayout","_recycler","clean","collectionNumber","length","_isInMeasure","calculateScrapViewsLimit","_invalidate","layout","_isInLayout","i","child","get","detach","findPositionInRange","recycleView","context","index","insertViews","pruneScrapViews","firstChild","lastChild","_firstItemPosition","view","getView","dispatchLayout","_lastItemPosition","count","$implicit","createEmbeddedView","VirtualRepeatRow","Directive","IterableDiffers","TemplateRef","ViewContainerRef","VirtualRepeatBase","type","VirtualRepeatAsynch","getLength","first","detachAllViews","collection_length","this_1","this_2","this_3","getItem","VirtualRepeatAngularLibModule","NgModule","imports","BrowserModule","declarations","exports"],"mappings":"4zBACA,iBA2HI,SAAAA,uBAxGgC,uBACE,wBACC,qBAEG,IAAIC,EAAAA,qCAEkB,IAAIC,EAAAA,gBAAgBC,EAAaC,2BAC1C,IAAIF,EAAAA,gBAAgB,oBACtB,IAAIA,EAAAA,gBAAgB,CAAC,EAAG,4BAE7C,0BAvBP,0BA2BcC,EAAaC,qBAsE3B,sBACE,4BACQ,EAmB3BC,KAAKC,eAAiB,SACtBD,KAAKE,eAAiBC,WArF1BC,OAAAC,eAAIV,EAAAW,UAAA,eAAY,KAiBhB,WACI,OAAON,KAAKO,mBAlBhB,SAAiBC,GAAjB,IAAAC,EAAAT,UAC0B,IAAXQ,IACPR,KAAKO,cAAgBC,EACM,IAAvBR,KAAKO,gBACLP,KAAKU,cAAcC,cAAcC,UAAY,IAtCpC,IA0CTZ,KAAKa,mBAAiE,IAAvBb,KAAKO,eACpDO,WAAW,WACPL,EAAKC,cAAcC,cAAcC,UAAYH,EAAKI,kBAClDJ,EAAKI,mBA7CA,sCAuDrBT,OAAAC,eAAIV,EAAAW,UAAA,mBAAgB,KAApB,WACI,OAAIN,KAAKe,aACEf,KAAKe,aAAe,KAExB,wCAMXX,OAAAC,eAAIV,EAAAW,UAAA,oBAAiB,KAArB,WACI,OAAON,KAAKgB,mBAAmBC,gDAMnCb,OAAAC,eACIV,EAAAW,UAAA,iBAAc,KADlB,WAEI,OAAON,KAAKkB,gBAAgBD,gDAMhCb,OAAAC,eAAIV,EAAAW,UAAA,aAAU,KAAd,WACI,OAAON,KAAKmB,YAAYF,gDAG5Bb,OAAAC,eAAaV,EAAAW,UAAA,YAAS,KAAtB,SAAuBc,GAChBA,GAAaC,YACK,QAAbD,GACApB,KAAKsB,WAAaC,OAAOH,GACzBpB,KAAKwB,oBAAsBxB,KAAKyB,aAAe,IAG/CzB,KAAKwB,qBAAsB,EAC3BxB,KAAKyB,aAAc,qCAS/BrB,OAAAC,eACIV,EAAAW,UAAA,oBAAiB,KADrB,SACsBoB,GAElB1B,KAAKU,cAAcC,cAAcC,UAAYc,EAExC1B,KAAKe,eACNf,KAAKa,kBAAoBa,GAE7B1B,KAAKkB,gBAAgBS,KAAKD,oCAa9B/B,EAAAW,UAAAsB,gBAAA,WAAA,IAAAnB,EAAAT,KACgC,mBAAxBA,KAAKC,iBACLD,KAAKU,cAAcC,cAAckB,MAAMC,MAAS,EAAI9B,KAAKE,eAAkB,KAC3EF,KAAKU,cAAcC,cAAckB,MAAME,aAAe/B,KAAKE,eAAiB,MAG5E8B,QACAhC,KAAKiC,cAAcC,IAAIC,EAAAA,UAAUH,OAAQ,UACpCI,UAAU,WACP3B,EAAK4B,oBAGjBrC,KAAKiC,cAAcC,IACfC,EAAAA,UAAUnC,KAAKU,cAAcC,cAAe,UACvC2B,KACGC,EAAAA,OAAO,WACH,OAAI9B,EAAK+B,oBACL/B,EAAK+B,mBAAoB,KAKjCC,EAAAA,IAAI,WACA,OAAOhC,EAAKC,cAAcC,cAAcC,aAG/CwB,UAAU,SAACM,GACRjC,EAAKS,gBAAgBS,KAAKe,MAGtC1C,KAAKiC,cAAcC,IACflC,KAAK2C,eACAL,KACGM,EAAAA,IAAI,WACInC,EAAKoC,qBAAuB/C,EAAaC,OACzCU,EAAKoC,mBAAqB/C,EAAagD,UACvCrC,EAAKO,mBAAmBW,KAAKlB,EAAKoC,uBAG1CE,EAAAA,aAnKsB,MAqKzBX,UACG,WACQ3B,EAAKoC,qBAAuB/C,EAAagD,YACzCrC,EAAKoC,mBAAqB/C,EAAaC,KACvCU,EAAKO,mBAAmBW,KAAKlB,EAAKoC,wBAKtD/B,WAAW,WACPL,EAAK4B,oBAIb1C,EAAAW,UAAA0C,YAAA,WACIhD,KAAKiC,cAAcgB,eAGvBtD,EAAAW,UAAA4C,QAAA,WACI,GAAIlD,KAAKU,eAAiBV,KAAKU,cAAcC,cAAe,CAGxD,IAAIwC,EAAOnD,KAAKU,cAAcC,cAAcyC,wBAG5C,OAFApD,KAAKqD,gBAAkBF,EAAKG,MAAQtD,KAAKE,eACzCF,KAAKuD,iBAAmBJ,EAAK3C,OACtB,CAAE8C,MAAOtD,KAAKqD,gBAAiB7C,OAAQR,KAAKuD,kBAEvD,MAAO,CAAED,MAAO,EAAG9C,OAAQ,IAG/Bb,EAAAW,UAAA+B,eAAA,WACI,IAAAmB,EAAAxD,KAAAkD,UAAMI,EAAAE,EAAAF,MAAO9C,EAAAgD,EAAAhD,OACbR,KAAKmB,YAAYQ,KAAK,CAAC2B,EAAO9C,yBAjMrCiD,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,8BACVC,SAAU,gOAMVC,OAAQ,CAAC,2cAmBRC,EAAAA,UAASJ,KAAA,CAAC,yCA2CVK,EAAAA,0BAYAC,EAAAA,iCAiBAA,EAAAA,qCAuGL,SAAA7D,IACI,IAAI8D,EAAQC,SAASC,cAAc,KACnCF,EAAMpC,MAAMyB,MAAQ,OACpBW,EAAMpC,MAAMrB,OAAS,QAErB,IAAI4D,EAAQF,SAASC,cAAc,OACnCC,EAAMvC,MAAMwC,SAAW,WACvBD,EAAMvC,MAAMyC,IAAM,MAClBF,EAAMvC,MAAM0C,KAAO,MACnBH,EAAMvC,MAAM2C,WAAa,SACzBJ,EAAMvC,MAAMyB,MAAQ,QACpBc,EAAMvC,MAAMrB,OAAS,QACrB4D,EAAMvC,MAAM4C,SAAW,SACvBL,EAAMM,YAAYT,GAElBC,SAASS,KAAKD,YAAYN,GAC1B,IAAIQ,EAAKX,EAAMY,YACfT,EAAMvC,MAAM4C,SAAW,SACvB,IAAIK,EAAKb,EAAMY,YAQf,OANID,GAAME,IACNA,EAAKV,EAAMW,aAGfb,SAASS,KAAKK,YAAYZ,GAElBQ,EAAKE,8CC7NjB,IAAIG,EAAgB7E,OAAO8E,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5D,KAAK4D,EAAOA,EAAEC,eAAe7D,KAAI2D,EAAE3D,GAAK4D,EAAE5D,KAEzE,SAAA8D,EAA0BH,EAAGC,GAEzB,SAAAG,IAAgBzF,KAAK0F,YAAcL,EADnCJ,EAAcI,EAAGC,GAEjBD,EAAE/E,UAAkB,OAANgF,EAAalF,OAAOuF,OAAOL,IAAMG,EAAGnF,UAAYgF,EAAEhF,UAAW,IAAImF,qBCiC/E,SAAAG,EAAYC,EACRC,EACAC,EACAC,UACAC,EAAAC,KAAAlG,KAAM6F,EAAyBC,EAAUC,EAAWC,IAAkBhG,YAjCxCmG,EAAAA,EAAAA,GAMlC/F,OAAAC,eACIuF,EAAAtF,UAAA,0BAAuB,KAW3B,WACI,OAAON,KAAKoG,gBAbhB,SAC4BC,GACpBC,EAAAA,aAAqB,MAAND,GAA4B,mBAAPA,GACpC,SAAyBE,QAAY,MACjCA,QAAQC,KACJ,4CAA4CC,KAAKC,UAAUL,GAAG,4HAI1ErG,KAAKoG,WAAaC,mCAOtBjG,OAAAC,eACIuF,EAAAtF,UAAA,2BAAwB,KAD5B,SAC6BqG,GACrBA,IACA3G,KAAK+F,UAAYY,oCAYzBf,EAAAtF,UAAAsG,YAAA,SAAYC,GACR,GAAI,oBAAqBA,EAAS,CAE9B,IAAMF,EAAQE,EAAyB,gBAAEC,aACzC,IAAK9G,KAAK+G,SAAWJ,EACjB,IACI3G,KAAK+G,QAAU/G,KAAK8F,SAASkB,KAAKL,GAAOhB,OAAO3F,KAAKoG,YACvD,MAAOa,GACL,MAAM,IAAIC,MAAM,2CAA2CP,EAAK,cAAcQ,EAAwBR,GAAM,kEAM5Hf,EAAAtF,UAAA8G,UAAA,WACI,GAAIpH,KAAK+G,QAAS,CACd,IAAMF,EAAU7G,KAAK+G,QAAQM,KAAKrH,KAAKsH,iBACnCT,GACA7G,KAAKuH,aAAaV,KAKtBjB,EAAAtF,UAAAiH,sBAAaV,cACZ7G,KAAKwH,cACNxH,KAAKwH,YAAc,IAEvB,IAAIC,GAAwB,EAE5BZ,EAAQa,iBAAiB,SAACC,EAAiCC,EAA+BC,GAC5D,MAAtBF,EAAKG,eAGLL,GAAwB,EACxBhH,EAAK+G,YAAYO,OAAOF,EAAc,EAAGF,EAAKA,OACvB,MAAhBE,GAGPJ,GAAwB,EACxBhH,EAAK+G,YAAYO,OAAOH,EAAuB,IAI/CnH,EAAK+G,YAAYO,OAAOF,EAAc,EAAGpH,EAAK+G,YAAYO,OAAOH,EAAuB,GAAG,MAInGf,EAAQmB,sBAAsB,SAACC,GAC3BxH,EAAK+G,YAAYS,EAAOJ,cAAgBI,EAAON,OAG/CF,GACAzH,KAAKqC,iBAGTrC,KAAKkI,iBAGTtC,EAAAtF,UAAA0C,YAAA,WACIhD,KAAKiC,cAAcgB,cACnBjD,KAAKmI,UAAUC,SAGTxC,EAAAtF,UAAA4C,QAAV,WACI,IAAImF,EAAoBrI,KAAKwH,aAA2C,IAA5BxH,KAAKwH,YAAYc,OAAmBtI,KAAKwH,YAAYc,OAArB,EAC5EtI,KAAKuI,cAAe,EACpBvI,KAAK6F,wBAAwB9E,aAAef,KAAK6F,wBAAwBvE,WAAa+G,EAEtFrI,KAAKwI,2BACLxI,KAAKuI,cAAe,EACpBvI,KAAKyI,aAAc,EACnBzI,KAAKkI,iBAGCtC,EAAAtF,UAAAoI,OAAV,WACI,IAAI1I,KAAK2I,YAAT,CAGA3I,KAAK2I,aAAc,EACnB,IAAAnF,EAAAxD,KAAA6F,wBAAA3C,UAAMI,EAAAE,EAAAF,MAAO9C,EAAAgD,EAAAhD,OAGb,GAFAR,KAAKqD,gBAAkBC,EACvBtD,KAAKuD,iBAAmB/C,GACnBR,KAAKwH,aAA2C,IAA5BxH,KAAKwH,YAAYc,OAAc,CAEpD,IAAK,IAAIM,EAAI,EAAGA,EAAI5I,KAAKgG,kBAAkBsC,OAAQM,IAAK,CACpD,IAAIC,EAA2C7I,KAAKgG,kBAAkB8C,IAAIF,GAC1E5I,KAAKgG,kBAAkB+C,OAAOH,GAC9BA,IAIJ,OAFA5I,KAAK2I,aAAc,OACnB3I,KAAKyI,aAAc,GAGvBzI,KAAKgJ,oBAAoBhJ,KAAKwH,YAAYc,QAC1C,IAASM,EAAI,EAAGA,EAAI5I,KAAKgG,kBAAkBsC,OAAQM,IAAK,CAChDC,EAA2C7I,KAAKgG,kBAAkB8C,IAAIF,GAC1E5I,KAAKgG,kBAAkB+C,OAAOH,GAC9B5I,KAAKmI,UAAUc,YAAYJ,EAAMK,QAAQC,MAAON,GAChDD,IAEJ5I,KAAKoJ,cACLpJ,KAAKmI,UAAUkB,kBACfrJ,KAAK2I,aAAc,EACnB3I,KAAKyI,aAAc,IAGb7C,EAAAtF,UAAA8I,YAAV,WACI,GAAoC,EAAhCpJ,KAAKgG,kBAAkBsC,OAAY,CAGnC,IAFA,IAAIgB,EAAgDtJ,KAAKgG,kBAAkB8C,IAAI,GAC3ES,EAA+CvJ,KAAKgG,kBAAkB8C,IAAI9I,KAAKgG,kBAAkBsC,OAAS,GACrGM,EAAIU,EAAWJ,QAAQC,MAAQ,EAAGP,GAAK5I,KAAKwJ,mBAAoBZ,IAAK,CAC1E,IAAIa,EAAOzJ,KAAK0J,QAAQd,GACxB5I,KAAK2J,eAAef,EAAGa,GAAM,GAEjC,IAASb,EAAIW,EAAUL,QAAQC,MAAQ,EAAGP,GAAK5I,KAAK4J,kBAAmBhB,IAAK,CACpEa,EAAOzJ,KAAK0J,QAAQd,GACxB5I,KAAK2J,eAAef,EAAGa,GAAM,SAGjC,IAASb,EAAI5I,KAAKwJ,mBAAoBZ,GAAK5I,KAAK4J,kBAAmBhB,IAAK,CAChEa,EAAOzJ,KAAK0J,QAAQd,GACxB5I,KAAK2J,eAAef,EAAGa,GAAM,KAK/B7D,EAAAtF,UAAAoJ,QAAV,SAAkBrF,GACd,IAAIoF,EAAOzJ,KAAKmI,UAAUuB,QAAQrF,GAC9BsD,EAAO3H,KAAKwH,YAAYnD,GACxBwF,EAAQ7J,KAAKwH,YAAYc,OAQ7B,OAPKmB,GAGD,EAA4CP,QAAQY,UAAYnC,EAChE,EAA4CuB,QAAQC,MAAQ9E,EAC5D,EAA4C6E,QAAQW,MAAQA,GAJ5DJ,EAAOzJ,KAAK+F,UAAUgE,mBAAmB,IAAIC,EAAAA,iBAAiBrC,EAAMtD,EAAUwF,IAM3EJ,uBAjLdQ,EAAAA,UAASvG,KAAA,CAAC,CACPC,SAAU,+DAJLhE,EAAAA,8BAbLuK,EAAAA,uBAMAC,EAAAA,mBAEAC,EAAAA,6DAeCpG,EAAAA,uCAEAA,EAAAA,wCAgBAA,EAAAA,YAtBiCqG,EAAAA,mBAmLtC,SAAAlD,EAAwCmD,GACpC,OAAOA,EAAW,aAAYA,oBClJ9B,SAAAC,EAAY1E,EACRC,EACAC,EACAC,UACAC,EAAAC,KAAAlG,KAAM6F,EAAyBC,EAAUC,EAAWC,IAAkBhG,YAjClCmG,EAAAA,EAAAA,GAMxC/F,OAAAC,eACIkK,EAAAjK,UAAA,gCAA6B,KAWjC,WACI,OAAON,KAAKoG,gBAbhB,SACkCC,GAC1BC,EAAAA,aAAqB,MAAND,GAA4B,mBAAPA,GACpC,SAAyBE,QAAY,MACjCA,QAAQC,KACJ,4CAA4CC,KAAKC,UAAUL,GAAG,4HAI1ErG,KAAKoG,WAAaC,mCAOtBjG,OAAAC,eACIkK,EAAAjK,UAAA,iCAA8B,KADlC,SACmCqG,GAC3BA,IACA3G,KAAK+F,UAAYY,oCAYzB4D,EAAAjK,UAAAsG,YAAA,SAAYC,GACR,GAAI,0BAA2BA,EAAS,CAEpC,IAAMF,EAAQE,EAA+B,sBAAEC,aAC/C9G,KAAKwH,YAAcb,EAEnB3G,KAAK6F,wBAAwBrE,qBAAsB,EAEnDxB,KAAKqC,mBAIHkI,EAAAjK,UAAA4C,QAAV,WAAA,IAAAzC,EAAAT,KACSA,KAAKwH,cAEVxH,KAAKuI,cAAe,EACpBvI,KAAKwH,YAAYgD,YAAYlI,KAAKmI,EAAAA,SAASrI,UAAU,SAACkG,GAClD7H,EAAKoF,wBAAwB9E,aAAeN,EAAKoF,wBAAwBvE,WAAagH,EAEtF7H,EAAK+H,2BACL/H,EAAK8H,cAAe,EACpB9H,EAAKgI,aAAc,EACnBhI,EAAKyH,oBAIHqC,EAAAjK,UAAAoI,OAAV,WAAA,IAAAjI,EAAAT,KACI,IAAIA,KAAK2I,YAAT,CAIA3I,KAAK2I,aAAc,EACnB,IAAAnF,EAAAxD,KAAA6F,wBAAA3C,UAAMI,EAAAE,EAAAF,MAAO9C,EAAAgD,EAAAhD,OAGb,GAFAR,KAAKqD,gBAAkBC,EACvBtD,KAAKuD,iBAAmB/C,GACnBR,KAAKwH,YAEN,OAAOxH,KAAK0K,iBAEhB1K,KAAKwH,YAAYgD,YAAYlI,KAAKmI,EAAAA,SAASrI,UAAU,SAACkG,GAClD,GAAc,GAAVA,EACA,OAAO7H,EAAKiK,iBAEhBjK,EAAKuI,oBAAoBV,GACzB,IAAK,IAAIM,EAAI,EAAGA,EAAInI,EAAKuF,kBAAkBsC,OAAQM,IAAK,CACpD,IAAIC,EAA2CpI,EAAKuF,kBAAkB8C,IAAIF,GAE1EnI,EAAKuF,kBAAkB+C,OAAOH,GAC9BnI,EAAK0H,UAAUc,YAAYJ,EAAMK,QAAQC,MAAON,GAChDD,IAGJnI,EAAK2I,YAAYd,GACjB7H,EAAK0H,UAAUkB,kBACf5I,EAAKkI,aAAc,EACnBlI,EAAKgI,aAAc,MAIjB8B,EAAAjK,UAAA8I,YAAV,SAAsBuB,GAAtB,IAAAlK,EAAAT,KACI,GAAoC,EAAhCA,KAAKgG,kBAAkBsC,OAAY,CAGnC,IAFA,IAAIgB,EAAgDtJ,KAAKgG,kBAAkB8C,IAAI,GAC3ES,EAA+CvJ,KAAKgG,kBAAkB8C,IAAI9I,KAAKgG,kBAAkBsC,OAAS,cACrGM,GACLgC,EAAKlB,QAAQiB,EAAmB/B,GAAGxG,UAAU,SAACqH,GAC1ChJ,EAAKkJ,eAAef,EAAGa,GAAM,aAF5Bb,EAAIU,EAAWJ,QAAQC,MAAQ,EAAGP,GAAK5I,KAAKwJ,mBAAoBZ,MAAhEA,kBAKAA,GACMiC,EAAKnB,QAAQiB,EAAmB/B,GAAGxG,UAAU,SAACqH,GACrDhJ,EAAKkJ,eAAef,EAAGa,GAAM,aAFrC,IAASb,EAAIW,EAAUL,QAAQC,MAAQ,EAAGP,GAAK5I,KAAK4J,kBAAmBhB,MAA9DA,uBAMAA,GACLkC,EAAKpB,QAAQiB,EAAmB/B,GAAGxG,UAAU,SAACqH,GAC1ChJ,EAAKkJ,eAAef,EAAGa,GAAM,aAFrC,IAASb,EAAI5I,KAAKwJ,mBAAoBZ,GAAK5I,KAAK4J,kBAAmBhB,MAA1DA,KAQP2B,EAAAjK,UAAAoJ,QAAV,SAAkBiB,EAA2BtG,GAA7C,IAAA5D,EAAAT,KACQyJ,EAAOzJ,KAAKmI,UAAUuB,QAAQrF,GAClC,OAAOrE,KAAKwH,YAAYuD,QAAQ1G,GAC3B/B,KACGmI,EAAAA,QACAhI,EAAAA,IAAI,SAACkF,GAQD,OAPK8B,GAGD,EAA4CP,QAAQY,UAAYnC,EAChE,EAA4CuB,QAAQC,MAAQ9E,EAC5D,EAA4C6E,QAAQW,MAAQc,GAJ5DlB,EAAOhJ,EAAKsF,UAAUgE,mBAAmB,IAAIC,EAAAA,iBAAiBrC,EAAMtD,EAAUsG,IAM3ElB,0BAvI1BQ,EAAAA,UAASvG,KAAA,CAAC,CACPC,SAAU,qEAVLhE,SAfLuK,EAAAA,uBAMAC,EAAAA,mBAEAC,EAAAA,mEAuBCpG,EAAAA,6CAEAA,EAAAA,8CAgBAA,EAAAA,YAtBuCqG,EAAAA,mBChC5CW,EAAA,oDAMCC,EAAAA,SAAQvH,KAAA,CAAC,CACRwH,QAAS,CACPC,EAAAA,eAEFC,aAAc,CACZzL,EACAiG,EACA2E,EAAAA,qBAEFc,QAAS,CACP1L,EACAiG,EACA2E,EAAAA,2BAlBJ,gCJK0C","sourcesContent":["import { CommonModule } from \"@angular/common\"\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy, Output, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, fromEvent } from 'rxjs';\nimport { skip, filter, tap, delay, take, concat, map, debounceTime } from 'rxjs/operators';\n\nexport const SCROLL_STOP_TIME_THRESHOLD = 200; // in milliseconds\n\nconst INVALID_POSITION = -1;\n\n@Component({\n    selector: 'gc-virtual-repeat-container',\n    template: `<div class=\"gc-virtual-repeat-container\" #listContainer [ngClass]=\"scrollbarStyle\">\r\n    <div class=\"gc-virtual-repeat-container\" [style.height]=\"holderHeightInPx\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n`,\n    styles: [`.gc-virtual-repeat-container{overflow-y:auto;overflow-x:hidden;position:relative;contain:layout;-webkit-overflow-scrolling:touch}.gc-virtual-repeat-container .gc-virtual-repeat-container-holder{width:100%;position:relative}.gc-virtual-repeat-container.normal{width:100%;height:100%}.gc-virtual-repeat-container.hide-scrollbar{position:absolute;top:0;left:0;bottom:0;right:0}`]\n})\nexport class VirtualRepeatContainer implements AfterViewInit, OnDestroy {\n    private _holderHeight: number = 0;\n    private _containerWidth: number = 0;\n    private _containerHeight: number = 0;\n\n    private _subscription: Subscription = new Subscription();\n\n    private _scrollStateChange: BehaviorSubject<SCROLL_STATE> = new BehaviorSubject(SCROLL_STATE.IDLE);\n    private _scrollPosition: BehaviorSubject<number> = new BehaviorSubject(0);\n    private _sizeChange: BehaviorSubject<number[]> = new BehaviorSubject([0, 0]);\n\n    private ignoreScrollEvent = false;\n\n    private _initialScrollTop = INVALID_POSITION;\n\n    currentScrollState: SCROLL_STATE = SCROLL_STATE.IDLE;\n\n    @ViewChild('listContainer') listContainer: ElementRef;\n\n    scrollbarStyle: string;\n    scrollbarWidth: number;\n\n    set holderHeight(height: number) {\n        if (typeof height !== 'undefined') {\n            this._holderHeight = height;\n            if (this._holderHeight === 0) {\n                this.listContainer.nativeElement.scrollTop = 0;\n            }\n            // When initialization, the list-holder doesn't not have its height. So the scrollTop should be delayed for waiting\n            // the list-holder rendered bigger than the list-container.\n            if (this._initialScrollTop !== INVALID_POSITION && this._holderHeight !== 0) {\n                setTimeout(() => {\n                    this.listContainer.nativeElement.scrollTop = this._initialScrollTop;\n                    this._initialScrollTop = INVALID_POSITION;\n                });\n            }\n        }\n    }\n\n    get holderHeight(): number {\n        return this._holderHeight;\n    }\n\n    get holderHeightInPx(): string {\n        if (this.holderHeight) {\n            return this.holderHeight + 'px';\n        }\n        return '100%';\n    }\n\n    /**\n     * scroll state change\n     */\n    get scrollStateChange(): Observable<SCROLL_STATE> {\n        return this._scrollStateChange.asObservable();\n    }\n\n    /**\n     * current scroll position.\n     */\n    @Output()\n    get scrollPosition(): Observable<number> {\n        return this._scrollPosition.asObservable();\n    }\n\n    /**\n     * list container width and height.\n     */\n    get sizeChange(): Observable<number[]> {\n        return this._sizeChange.asObservable();\n    }\n\n    @Input() set rowHeight(rowHeight: string) {\n        if(rowHeight != undefined) {\n            if (rowHeight != \"auto\") {\n                this._rowHeight = Number(rowHeight);\n                this._heightAutoComputed = this._autoHeight =  false;\n\n            } else {\n                this._heightAutoComputed = false;\n                this._autoHeight = true;\n            }            \n        }\n    } \n\n    _rowHeight: number = 100;\n    _autoHeight: boolean = false;\n    _heightAutoComputed: boolean = false;\n\n    @Input()\n    set newScrollPosition(p: number) {\n        // console.log('p', p);\n        this.listContainer.nativeElement.scrollTop = p;\n        // if list-holder has no height at the certain time. scrollTop will not be set.\n        if (!this.holderHeight) {\n            this._initialScrollTop = p;\n        }\n        this._scrollPosition.next(p);\n    }\n\n    /**\n     * UITimelineMeter is optional injection. when this component used inside a UITimelineMeter.\n     * it is responsible to update the scrollY\n     * @param _timelineMeter\n     */\n    constructor() {\n        this.scrollbarStyle = 'normal';\n        this.scrollbarWidth = getScrollBarWidth();\n    }\n\n    ngAfterViewInit(): void {\n        if (this.scrollbarStyle === 'hide-scrollbar') {\n            this.listContainer.nativeElement.style.right = (0 - this.scrollbarWidth) + 'px';\n            this.listContainer.nativeElement.style.paddingRight = this.scrollbarWidth + 'px';\n        }\n\n        if (window) {\n            this._subscription.add(fromEvent(window, 'resize')\n                .subscribe(() => {\n                    this.requestMeasure();\n                }));\n        }\n        this._subscription.add(\n            fromEvent(this.listContainer.nativeElement, 'scroll')\n                .pipe(\n                    filter(() => {\n                        if (this.ignoreScrollEvent) {\n                            this.ignoreScrollEvent = false;\n                            return false;\n                        }\n                        return true;\n                    }),\n                    map(() => {\n                        return this.listContainer.nativeElement.scrollTop;\n                    })\n                )\n                .subscribe((scrollY: number) => {\n                    this._scrollPosition.next(scrollY);\n                }));\n\n        this._subscription.add(\n            this.scrollPosition\n                .pipe(\n                    tap(() => {\n                        if (this.currentScrollState === SCROLL_STATE.IDLE) {\n                            this.currentScrollState = SCROLL_STATE.SCROLLING;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }),\n                    debounceTime(SCROLL_STOP_TIME_THRESHOLD)\n                )\n                .subscribe(\n                    () => {\n                        if (this.currentScrollState === SCROLL_STATE.SCROLLING) {\n                            this.currentScrollState = SCROLL_STATE.IDLE;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }\n                ));\n\n        setTimeout(() => {\n            this.requestMeasure();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n\n    measure(): { width: number, height: number } {\n        if (this.listContainer && this.listContainer.nativeElement) {\n            // let measuredWidth = this.listContainer.nativeElement.clientWidth;\n            // let measuredHeight = this.listContainer.nativeElement.clientHeight;\n            let rect = this.listContainer.nativeElement.getBoundingClientRect();\n            this._containerWidth = rect.width - this.scrollbarWidth;\n            this._containerHeight = rect.height;\n            return { width: this._containerWidth, height: this._containerHeight };\n        }\n        return { width: 0, height: 0 };\n    }\n\n    requestMeasure() {\n        let { width, height } = this.measure();\n        this._sizeChange.next([width, height]);\n    }\n}\n\nexport enum SCROLL_STATE {\n    SCROLLING,\n    IDLE\n}\n\nexport function getScrollBarWidth() {\n    let inner = document.createElement('p');\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    let outer = document.createElement('div');\n    outer.style.position = \"absolute\";\n    outer.style.top = \"0px\";\n    outer.style.left = \"0px\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"200px\";\n    outer.style.height = \"150px\";\n    outer.style.overflow = \"hidden\";\n    outer.appendChild(inner);\n\n    document.body.appendChild(outer);\n    let w1 = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    let w2 = inner.offsetWidth;\n\n    if (w1 == w2) {\n        w2 = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n\n    return (w1 - w2);\n}\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n    Directive,\r\n    DoCheck,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    isDevMode,\r\n    IterableChangeRecord,\r\n    IterableChanges,\r\n    IterableDiffers,\r\n    NgIterable,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    TrackByFunction,\r\n    ViewContainerRef,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\n//import { VirtualRepeatContainer } from 'virtual-repeat-angular-lib';\r\nimport { VirtualRepeatContainer } from 'virtual-repeat-angular-lib/virtual-repeat-container';\r\nimport { VirtualRepeatRow, VirtualRepeatBase } from 'virtual-repeat-angular-lib/virtual-repeat.base';\r\n\r\n@Directive({\r\n    selector: '[virtualRepeat]'\r\n})\r\nexport class VirtualRepeat<T> extends VirtualRepeatBase<T> implements OnChanges, DoCheck, OnInit, OnDestroy {\r\n\r\n    private _collection: any[];\r\n\r\n    @Input() virtualRepeatOf: NgIterable<T>;\r\n\r\n    @Input()\r\n    set virtualRepeatForTrackBy(fn: TrackByFunction<T>) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n            if (<any>console && <any>console.warn) {\r\n                console.warn(\r\n                    `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n\r\n    get virtualRepeatForTrackBy(): TrackByFunction<T> {\r\n        return this._trackByFn;\r\n    }\r\n\r\n    @Input()\r\n    set virtualRepeatForTemplate(value: TemplateRef<VirtualRepeatRow>) {\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n\r\n    constructor(_virtualRepeatContainer: VirtualRepeatContainer,\r\n        _differs: IterableDiffers,\r\n        _template: TemplateRef<VirtualRepeatRow>,\r\n        _viewContainerRef: ViewContainerRef) {\r\n        super(_virtualRepeatContainer, _differs, _template, _viewContainerRef)\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('virtualRepeatOf' in changes) {\r\n            // React on virtualRepeatOf only once all inputs have been initialized\r\n            const value = changes['virtualRepeatOf'].currentValue;\r\n            if (!this._differ && value) {\r\n                try {\r\n                    this._differ = this._differs.find(value).create(this._trackByFn);\r\n                } catch (e) {\r\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (this._differ) {\r\n            const changes = this._differ.diff(this.virtualRepeatOf);\r\n            if (changes) {\r\n                this.applyChanges(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyChanges(changes: IterableChanges<T>) {\r\n        if (!this._collection) {\r\n            this._collection = [];\r\n        }\r\n        let isMeasurementRequired = false;\r\n\r\n        changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\r\n            if (item.previousIndex == null) {\r\n                // new item\r\n                // console.log('new item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(currentIndex, 0, item.item);\r\n            } else if (currentIndex == null) {\r\n                // remove item\r\n                // console.log('remove item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(adjustedPreviousIndex, 1);\r\n            } else {\r\n                // move item\r\n                // console.log('move item', item, adjustedPreviousIndex, currentIndex);\r\n                this._collection.splice(currentIndex, 0, this._collection.splice(adjustedPreviousIndex, 1)[0]);\r\n            }\r\n        });\r\n\r\n        changes.forEachIdentityChange((record: any) => {\r\n            this._collection[record.currentIndex] = record.item;\r\n        });\r\n\r\n        if (isMeasurementRequired) {\r\n            this.requestMeasure();\r\n        }\r\n\r\n        this.requestLayout();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n        this._recycler.clean();\r\n    }\r\n\r\n    protected measure() {\r\n        let collectionNumber = !this._collection || this._collection.length === 0 ? 0 : this._collection.length;\r\n        this._isInMeasure = true;\r\n        this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer._rowHeight * collectionNumber;\r\n        // calculate a approximate number of which a view can contain\r\n        this.calculateScrapViewsLimit();\r\n        this._isInMeasure = false;\r\n        this._invalidate = true;\r\n        this.requestLayout();\r\n    }\r\n\r\n    protected layout() {\r\n        if (this._isInLayout) {\r\n            return;\r\n        }\r\n        this._isInLayout = true;\r\n        let { width, height } = this._virtualRepeatContainer.measure();\r\n        this._containerWidth = width;\r\n        this._containerHeight = height;\r\n        if (!this._collection || this._collection.length === 0) {\r\n            // detach all views without recycle them.\r\n            for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n                let child = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(i);\r\n                this._viewContainerRef.detach(i);\r\n                i--;\r\n            }\r\n            this._isInLayout = false;\r\n            this._invalidate = false;\r\n            return;\r\n        }\r\n        this.findPositionInRange(this._collection.length);\r\n        for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n            let child = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(i);\r\n            this._viewContainerRef.detach(i);\r\n            this._recycler.recycleView(child.context.index, child);\r\n            i--;\r\n        }\r\n        this.insertViews();\r\n        this._recycler.pruneScrapViews();\r\n        this._isInLayout = false;\r\n        this._invalidate = false;\r\n    }\r\n\r\n    protected insertViews() {\r\n        if (this._viewContainerRef.length > 0) {\r\n            let firstChild = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(0);\r\n            let lastChild = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(this._viewContainerRef.length - 1);\r\n            for (let i = firstChild.context.index - 1; i >= this._firstItemPosition; i--) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, true);\r\n            }\r\n            for (let i = lastChild.context.index + 1; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        } else {\r\n            for (let i = this._firstItemPosition; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getView(position: number): ViewRef {\r\n        let view = this._recycler.getView(position);\r\n        let item = this._collection[position];\r\n        let count = this._collection.length;\r\n        if (!view) {\r\n            view = this._template.createEmbeddedView(new VirtualRepeatRow(item, position, count));\r\n        } else {\r\n            (view as EmbeddedViewRef<VirtualRepeatRow>).context.$implicit = item;\r\n            (view as EmbeddedViewRef<VirtualRepeatRow>).context.index = position;\r\n            (view as EmbeddedViewRef<VirtualRepeatRow>).context.count = count;\r\n        }\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\nexport function getTypeNameForDebugging(type: any): string {\r\n    return type['name'] || typeof type;\r\n}\r\n","import {\r\n    Directive,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    isDevMode,\r\n    IterableDiffers,\r\n    NgIterable,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    TrackByFunction,\r\n    ViewContainerRef,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\r\n//import { VirtualRepeatContainer } from 'virtual-repeat-angular-lib';\r\nimport { VirtualRepeatRow, VirtualRepeatBase } from 'virtual-repeat-angular-lib/virtual-repeat.base';\r\n\r\nexport interface IAsynchCollection {\r\n    getLength(): Observable<number>;\r\n    getItem(i: number): Observable<any>;\r\n}\r\n\r\n@Directive({\r\n    selector: '[virtualRepeatAsynch]'\r\n})\r\nexport class VirtualRepeatAsynch<T> extends VirtualRepeatBase<T> implements OnChanges, OnInit, OnDestroy {\r\n\r\n    protected _collection: IAsynchCollection;\r\n\r\n    @Input() virtualRepeatAsynchOf: NgIterable<T>;\r\n\r\n    @Input()\r\n    set virtualRepeatAsynchForTrackBy(fn: TrackByFunction<T>) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n            if (<any>console && <any>console.warn) {\r\n                console.warn(\r\n                    `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n\r\n    get virtualRepeatAsynchForTrackBy(): TrackByFunction<T> {\r\n        return this._trackByFn;\r\n    }\r\n\r\n    @Input()\r\n    set virtualRepeatAsynchForTemplate(value: TemplateRef<VirtualRepeatRow>) {\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n\r\n    constructor(_virtualRepeatContainer: VirtualRepeatContainer,\r\n        _differs: IterableDiffers,\r\n        _template: TemplateRef<VirtualRepeatRow>,\r\n        _viewContainerRef: ViewContainerRef) {\r\n        super(_virtualRepeatContainer, _differs, _template, _viewContainerRef)\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('virtualRepeatAsynchOf' in changes) {\r\n            // React on virtualRepeatAsynchOf only once all inputs have been initialized\r\n            const value = changes['virtualRepeatAsynchOf'].currentValue;\r\n            this._collection = value;\r\n\r\n            this._virtualRepeatContainer._heightAutoComputed = false;\r\n\r\n            this.requestMeasure();\r\n        }\r\n    }\r\n\r\n    protected measure() {\r\n        if (!this._collection) return;\r\n\r\n        this._isInMeasure = true;\r\n        this._collection.getLength().pipe(first()).subscribe((length) => {\r\n            this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer._rowHeight * length;\r\n            // calculate a approximate number of which a view can contain\r\n            this.calculateScrapViewsLimit();\r\n            this._isInMeasure = false;\r\n            this._invalidate = true;\r\n            this.requestLayout();\r\n        });\r\n    }\r\n\r\n    protected layout() {\r\n        if (this._isInLayout) {\r\n            return;\r\n        }\r\n        // console.log('on layout');\r\n        this._isInLayout = true;\r\n        let { width, height } = this._virtualRepeatContainer.measure();\r\n        this._containerWidth = width;\r\n        this._containerHeight = height;\r\n        if (!this._collection) {\r\n            // detach all views without recycle them.\r\n            return this.detachAllViews();\r\n        }\r\n        this._collection.getLength().pipe(first()).subscribe((length) => {\r\n            if (length == 0) {\r\n                return this.detachAllViews();\r\n            }\r\n            this.findPositionInRange(length);\r\n            for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n                let child = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(i);\r\n                // if (child.context.index < this._firstItemPosition || child.context.index > this._lastItemPosition || this._invalidate) {\r\n                this._viewContainerRef.detach(i);\r\n                this._recycler.recycleView(child.context.index, child);\r\n                i--;\r\n                // }\r\n            }\r\n            this.insertViews(length);\r\n            this._recycler.pruneScrapViews();\r\n            this._isInLayout = false;\r\n            this._invalidate = false;\r\n        });\r\n    }\r\n\r\n    protected insertViews(collection_length: number) {\r\n        if (this._viewContainerRef.length > 0) {\r\n            let firstChild = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(0);\r\n            let lastChild = <EmbeddedViewRef<VirtualRepeatRow>>this._viewContainerRef.get(this._viewContainerRef.length - 1);\r\n            for (let i = firstChild.context.index - 1; i >= this._firstItemPosition; i--) {\r\n                this.getView(collection_length, i).subscribe((view) => {\r\n                    this.dispatchLayout(i, view, true);\r\n                });\r\n            }\r\n            for (let i = lastChild.context.index + 1; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(collection_length, i).subscribe((view) => {\r\n                    this.dispatchLayout(i, view, false);\r\n                });\r\n            }\r\n        } else {\r\n            for (let i = this._firstItemPosition; i <= this._lastItemPosition; i++) {\r\n                this.getView(collection_length, i).subscribe((view) => {\r\n                    this.dispatchLayout(i, view, false);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getView(collection_length: number, position: number): Observable<ViewRef> {\r\n        let view = this._recycler.getView(position);\r\n        return this._collection.getItem(position)\r\n            .pipe(\r\n                first(),\r\n                map((item) => {\r\n                    if (!view) {\r\n                        view = this._template.createEmbeddedView(new VirtualRepeatRow(item, position, collection_length));\r\n                    } else {\r\n                        (view as EmbeddedViewRef<VirtualRepeatRow>).context.$implicit = item;\r\n                        (view as EmbeddedViewRef<VirtualRepeatRow>).context.index = position;\r\n                        (view as EmbeddedViewRef<VirtualRepeatRow>).context.count = collection_length;\r\n                    }\r\n                    return view;\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\nimport { VirtualRepeat } from './virtual-repeat';\nimport { VirtualRepeatAsynch } from 'virtual-repeat-angular-lib/virtual-repeat-asynch';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    VirtualRepeatContainer,\n    VirtualRepeat,\n    VirtualRepeatAsynch\n  ],\n  exports: [\n    VirtualRepeatContainer,\n    VirtualRepeat,\n    VirtualRepeatAsynch\n  ]\n})\nexport class VirtualRepeatAngularLibModule { }\n"]}