{"version":3,"sources":["ng://virtual-repeat-angular-lib/lib/virtual-repeat-container.ts","ng://virtual-repeat-angular-lib/lib/virtual-repeat.ts","null","ng://virtual-repeat-angular-lib/lib/virtual-repeat-angular-lib.module.ts"],"names":["VirtualRepeatContainer","Subscription","BehaviorSubject","SCROLL_STATE","IDLE","this","scrollbarStyle","scrollbarWidth","getScrollBarWidth","Object","defineProperty","prototype","_holderHeight","height","_this","listContainer","nativeElement","scrollTop","_initialScrollTop","setTimeout","holderHeight","_scrollStateChange","asObservable","_scrollPosition","_sizeChange","p","next","ngAfterViewInit","style","right","paddingRight","window","_subscription","add","fromEvent","subscribe","requestMeasure","pipe","filter","ignoreScrollEvent","map","scrollY","scrollPosition","tap","currentScrollState","SCROLLING","debounceTime","ngOnDestroy","unsubscribe","measure","rect","getBoundingClientRect","_containerWidth","width","_containerHeight","_a","Component","args","selector","template","styles","ViewChild","Output","Input","inner","document","createElement","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","Recycler","Map","getView","view","_scrapViews","get","size","keys","value","delete","recycleView","detach","set","pruneScrapViews","limit","key","keyIterator","destroy","setScrapViewsLimit","clean","forEach","clear","InfiniteRow","$implicit","index","count","even","VirtualRepeat","_virtualRepeatContainer","_differs","_template","_viewContainerRef","_trackByFn","fn","isDevMode","console","warn","JSON","stringify","ngOnChanges","changes","currentValue","_differ","find","create","e","Error","getTypeNameForDebugging","ngDoCheck","diff","virtualRepeatOf","applyChanges","_collection","isMeasurementRequired","forEachOperation","item","adjustedPreviousIndex","currentIndex","previousIndex","splice","forEachIdentityChange","record","requestLayout","ngOnInit","Math","abs","_scrollY","rowHeight","sizeChange","_b","o","n","m","Symbol","iterator","r","i","call","ar","done","push","error","__read","_recycler","_isInMeasure","_isInLayout","clearTimeout","_pendingMeasurement","layout","collectionNumber","length","calculateScrapViewsLimit","_invalidate","child","findPositionInRange","context","insertViews","firstChild","lastChild","_firstItemPosition","dispatchLayout","_lastItemPosition","applyStyles","viewElement","y","transform","webkitTransform","addBefore","startPosY","rootNodes","insert","reattach","firstPosition","floor","firstPositionOffset","lastPosition","ceil","max","min","createEmbeddedView","Directive","IterableDiffers","TemplateRef","ViewContainerRef","type","VirtualRepeatAngularLibModule","NgModule","imports","BrowserModule","declarations","exports"],"mappings":"wdACA,iBA4GI,SAAAA,uBAzFgC,uBACE,wBACC,qBAEG,IAAIC,EAAAA,qCAEkB,IAAIC,EAAAA,gBAAgBC,EAAaC,2BAC1C,IAAIF,EAAAA,gBAAgB,oBACtB,IAAIA,EAAAA,gBAAgB,CAAC,EAAG,4BAE7C,0BAvBP,0BA2BcC,EAAaC,oBAyDnB,IAmBzBC,KAAKC,eAAiB,SACtBD,KAAKE,eAAiBC,WAtE1BC,OAAAC,eAAIV,EAAAW,UAAA,eAAY,KAiBhB,WACI,OAAON,KAAKO,mBAlBhB,SAAiBC,GAAjB,IAAAC,EAAAT,UAC0B,IAAXQ,IACPR,KAAKO,cAAgBC,EACM,IAAvBR,KAAKO,gBACLP,KAAKU,cAAcC,cAAcC,UAAY,IAtCpC,IA0CTZ,KAAKa,mBAAiE,IAAvBb,KAAKO,eACpDO,WAAW,WACPL,EAAKC,cAAcC,cAAcC,UAAYH,EAAKI,kBAClDJ,EAAKI,mBA7CA,sCAuDrBT,OAAAC,eAAIV,EAAAW,UAAA,mBAAgB,KAApB,WACI,OAAIN,KAAKe,aACEf,KAAKe,aAAe,KAExB,wCAMXX,OAAAC,eAAIV,EAAAW,UAAA,oBAAiB,KAArB,WACI,OAAON,KAAKgB,mBAAmBC,gDAMnCb,OAAAC,eACIV,EAAAW,UAAA,iBAAc,KADlB,WAEI,OAAON,KAAKkB,gBAAgBD,gDAMhCb,OAAAC,eAAIV,EAAAW,UAAA,aAAU,KAAd,WACI,OAAON,KAAKmB,YAAYF,gDAK5Bb,OAAAC,eACIV,EAAAW,UAAA,oBAAiB,KADrB,SACsBc,GAElBpB,KAAKU,cAAcC,cAAcC,UAAYQ,EAExCpB,KAAKe,eACNf,KAAKa,kBAAoBO,GAE7BpB,KAAKkB,gBAAgBG,KAAKD,oCAa9BzB,EAAAW,UAAAgB,gBAAA,WAAA,IAAAb,EAAAT,KACgC,mBAAxBA,KAAKC,iBACLD,KAAKU,cAAcC,cAAcY,MAAMC,MAAS,EAAIxB,KAAKE,eAAkB,KAC3EF,KAAKU,cAAcC,cAAcY,MAAME,aAAezB,KAAKE,eAAiB,MAG5EwB,QACA1B,KAAK2B,cAAcC,IAAIC,EAAAA,UAAUH,OAAQ,UACpCI,UAAU,WACPrB,EAAKsB,oBAGjB/B,KAAK2B,cAAcC,IACfC,EAAAA,UAAU7B,KAAKU,cAAcC,cAAe,UACvCqB,KACGC,EAAAA,OAAO,WACH,OAAIxB,EAAKyB,oBACLzB,EAAKyB,mBAAoB,KAKjCC,EAAAA,IAAI,WACA,OAAO1B,EAAKC,cAAcC,cAAcC,aAG/CkB,UAAU,SAACM,GACR3B,EAAKS,gBAAgBG,KAAKe,MAYtCpC,KAAK2B,cAAcC,IACf5B,KAAKqC,eACAL,KACGM,EAAAA,IAAI,WACI7B,EAAK8B,qBAAuBzC,EAAaC,OACzCU,EAAK8B,mBAAqBzC,EAAa0C,UACvC/B,EAAKO,mBAAmBK,KAAKZ,EAAK8B,uBAG1CE,EAAAA,aA7JsB,MA+JzBX,UACG,WACQrB,EAAK8B,qBAAuBzC,EAAa0C,YACzC/B,EAAK8B,mBAAqBzC,EAAaC,KACvCU,EAAKO,mBAAmBK,KAAKZ,EAAK8B,wBAKtDzB,WAAW,WACPL,EAAKsB,oBAIbpC,EAAAW,UAAAoC,YAAA,WACI1C,KAAK2B,cAAcgB,eAGvBhD,EAAAW,UAAAsC,QAAA,WACI,GAAI5C,KAAKU,eAAiBV,KAAKU,cAAcC,cAAe,CAGxD,IAAIkC,EAAO7C,KAAKU,cAAcC,cAAcmC,wBAG5C,OAFA9C,KAAK+C,gBAAkBF,EAAKG,MAAQhD,KAAKE,eACzCF,KAAKiD,iBAAmBJ,EAAKrC,OACtB,CAAEwC,MAAOhD,KAAK+C,gBAAiBvC,OAAQR,KAAKiD,kBAEvD,MAAO,CAAED,MAAO,EAAGxC,OAAQ,IAG/Bb,EAAAW,UAAAyB,eAAA,WACI,IAAAmB,EAAAlD,KAAA4C,UAAMI,EAAAE,EAAAF,MAAOxC,EAAA0C,EAAA1C,OACbR,KAAKmB,YAAYE,KAAK,CAAC2B,EAAOxC,yBA3LrC2C,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,8BACVC,SAAU,gOAMVC,OAAQ,CAAC,2cAmBRC,EAAAA,UAASJ,KAAA,CAAC,yCA2CVK,EAAAA,0BAYAC,EAAAA,iCAEAA,EAAAA,qCAgHL,SAAAvD,IACI,IAAIwD,EAAQC,SAASC,cAAc,KACnCF,EAAMpC,MAAMyB,MAAQ,OACpBW,EAAMpC,MAAMf,OAAS,QAErB,IAAIsD,EAAQF,SAASC,cAAc,OACnCC,EAAMvC,MAAMwC,SAAW,WACvBD,EAAMvC,MAAMyC,IAAM,MAClBF,EAAMvC,MAAM0C,KAAO,MACnBH,EAAMvC,MAAM2C,WAAa,SACzBJ,EAAMvC,MAAMyB,MAAQ,QACpBc,EAAMvC,MAAMf,OAAS,QACrBsD,EAAMvC,MAAM4C,SAAW,SACvBL,EAAMM,YAAYT,GAElBC,SAASS,KAAKD,YAAYN,GAC1B,IAAIQ,EAAKX,EAAMY,YACfT,EAAMvC,MAAM4C,SAAW,SACvB,IAAIK,EAAKb,EAAMY,YAQf,OANID,GAAME,IACNA,EAAKV,EAAMW,aAGfb,SAASS,KAAKK,YAAYZ,GAElBQ,EAAKE,kDC7MjBG,EAAA,mCAC4B,mBACoB,IAAIC,WAEhDD,EAAArE,UAAAuE,QAAA,SAAQd,GACJ,IAAIe,EAAO9E,KAAK+E,YAAYC,IAAIjB,GAQhC,OAPKe,GAAgC,EAAxB9E,KAAK+E,YAAYE,OAC1BlB,EAAW/D,KAAK+E,YAAYG,OAAO7D,OAAO8D,MAC1CL,EAAO9E,KAAK+E,YAAYC,IAAIjB,IAE5Be,GACA9E,KAAK+E,YAAYK,UAAOrB,GAErBe,GAAQ,MAGnBH,EAAArE,UAAA+E,YAAA,SAAYtB,EAAkBe,GAC1BA,EAAKQ,SACLtF,KAAK+E,YAAYQ,IAAIxB,EAAUe,IAMnCH,EAAArE,UAAAkF,gBAAA,WACI,KAAIxF,KAAKyF,OAAS,GAKlB,IAFA,IACIC,EADAC,EAAc3F,KAAK+E,YAAYG,OAE5BlF,KAAK+E,YAAYE,KAAOjF,KAAKyF,OAChCC,EAAMC,EAAYtE,OAAO8D,MACzBnF,KAAK+E,YAAYC,IAAIU,GAAKE,UAC1B5F,KAAK+E,YAAYK,UAAOM,IAIhCf,EAAArE,UAAAuF,mBAAA,SAAmBJ,GACfzF,KAAKyF,MAAQA,EACbzF,KAAKwF,mBAGTb,EAAArE,UAAAwF,MAAA,WACI9F,KAAK+E,YAAYgB,QAAQ,SAACjB,GACtBA,EAAKc,YAET5F,KAAK+E,YAAYiB,WA9CzB,GAkDAC,EAAA,WACI,SAAAA,EAAmBC,EAAuBC,EAAsBC,GAA7CpG,KAAAkG,UAAAA,EAAuBlG,KAAAmG,MAAAA,EAAsBnG,KAAAoG,MAAAA,SAGhEhG,OAAAC,eAAI4F,EAAA3F,UAAA,QAAK,KAAT,WACI,OAAsB,IAAfN,KAAKmG,uCAGhB/F,OAAAC,eAAI4F,EAAA3F,UAAA,OAAI,KAAR,WACI,OAAON,KAAKmG,QAAUnG,KAAKoG,MAAQ,mCAGvChG,OAAAC,eAAI4F,EAAA3F,UAAA,OAAI,KAAR,WACI,OAAON,KAAKmG,MAAQ,GAAM,mCAG9B/F,OAAAC,eAAI4F,EAAA3F,UAAA,MAAG,KAAP,WACI,OAAQN,KAAKqG,wCAjBrB,gBAuFI,SAAAC,EAAoBC,EACRC,EACAC,EACAC,GAHQ1G,KAAAuG,wBAAAA,EACRvG,KAAAwG,SAAAA,EACAxG,KAAAyG,UAAAA,EACAzG,KAAA0G,kBAAAA,qBA9D0B,IAAI9G,EAAAA,2BAIf,oBAgBI,oBAIA,qBAEC,iBAMF,IAAI+E,SAIlCvE,OAAAC,eACIiG,EAAAhG,UAAA,qBAAkB,KAWtB,WACI,OAAON,KAAK2G,gBAbhB,SACuBC,GACfC,EAAAA,aAAqB,MAAND,GAA4B,mBAAPA,GACpC,SAAyBE,QAAY,MACjCA,QAAQC,KACJ,4CAA4CC,KAAKC,UAAUL,GAAG,4HAI1E5G,KAAK2G,WAAaC,mCAOtBxG,OAAAC,eACIiG,EAAAhG,UAAA,sBAAmB,KADvB,SACwB6E,GAChBA,IACAnF,KAAKyG,UAAYtB,oCAUzBmB,EAAAhG,UAAA4G,YAAA,SAAYC,GACR,GAAI,oBAAqBA,EAAS,CAE9B,IAAMhC,EAAQgC,EAAyB,gBAAEC,aACzC,IAAKpH,KAAKqH,SAAWlC,EACjB,IACInF,KAAKqH,QAAUrH,KAAKwG,SAASc,KAAKnC,GAAOoC,OAAOvH,KAAK2G,YACvD,MAAOa,GACL,MAAM,IAAIC,MAAM,2CAA2CtC,EAAK,cAAcuC,EAAwBvC,GAAM,kEAM5HmB,EAAAhG,UAAAqH,UAAA,WACI,GAAI3H,KAAKqH,QAAS,CACd,IAAMF,EAAUnH,KAAKqH,QAAQO,KAAK5H,KAAK6H,iBACnCV,GACAnH,KAAK8H,aAAaX,KAKtBb,EAAAhG,UAAAwH,sBAAaX,cACZnH,KAAK+H,cACN/H,KAAK+H,YAAc,IAEvB,IAAIC,GAAwB,EAE5Bb,EAAQc,iBAAiB,SAACC,EAAiCC,EAA+BC,GAC5D,MAAtBF,EAAKG,eAGLL,GAAwB,EACxBvH,EAAKsH,YAAYO,OAAOF,EAAc,EAAGF,EAAKA,OACvB,MAAhBE,GAGPJ,GAAwB,EACxBvH,EAAKsH,YAAYO,OAAOH,EAAuB,IAI/C1H,EAAKsH,YAAYO,OAAOF,EAAc,EAAG3H,EAAKsH,YAAYO,OAAOH,EAAuB,GAAG,MAInGhB,EAAQoB,sBAAsB,SAACC,GAC3B/H,EAAKsH,YAAYS,EAAOJ,cAAgBI,EAAON,OAG/CF,GACAhI,KAAK+B,iBAGT/B,KAAKyI,iBAGTnC,EAAAhG,UAAAoI,SAAA,WAAA,IAAAjI,EAAAT,KACIA,KAAK2B,cAAcC,IAAI5B,KAAKuG,wBAAwBlE,eAC/CL,KACGC,EAAAA,OAAO,SAACG,GACJ,OAAOuG,KAAKC,IAAIxG,EAAU3B,EAAKoI,WAAapI,EAAK8F,wBAAwBuC,aAGhFhH,UACG,SAACM,GACG3B,EAAKoI,SAAWzG,EAChB3B,EAAKgI,mBAIjBzI,KAAK2B,cAAcC,IAAI5B,KAAKuG,wBAAwBwC,WAAWjH,UAC3D,SAACoB,OAAA8F,ECpOb,SAiGuBC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAY9B,EAA3B+B,EAAIJ,EAAEK,KAAKP,GAAOQ,EAAK,GAC3B,IACI,WAAc,IAANP,GAAsB,EAANA,QAAcI,EAAIC,EAAElI,QAAQqI,MAAMD,EAAGE,KAAKL,EAAEnE,OAExE,MAAOyE,GAASpC,EAAI,CAAEoC,MAAOA,WAEzB,IACQN,IAAMA,EAAEI,OAASP,EAAII,EAAU,YAAIJ,EAAEK,KAAKD,WAExC,GAAI/B,EAAG,MAAMA,EAAEoC,OAE7B,OAAOH,EDqHEI,CAAA3G,EAAA,GAACF,EAAAgG,EAAA,GAAOxI,EAAAwI,EAAA,GAELvI,EAAKsC,gBAAkBC,EACvBvC,EAAKwC,iBAAmBzC,EACxBC,EAAKsB,qBAKjBuE,EAAAhG,UAAAoC,YAAA,WACI1C,KAAK2B,cAAcgB,cACnB3C,KAAK8J,UAAUhE,SAGXQ,EAAAhG,UAAAyB,qCACJ,GAAI/B,KAAK+J,cAAgB/J,KAAKgK,YAK1B,OAJAC,aAAajK,KAAKkK,0BAClBlK,KAAKkK,oBAAsBxI,OAAOZ,WAAW,WACzCL,EAAKsB,kBACN,KAGP/B,KAAK4C,WAGD0D,EAAAhG,UAAAmI,0BAECzI,KAAK+J,cAAgB/J,KAAKuG,wBAAwBuC,WACnD9I,KAAKmK,UAIL7D,EAAAhG,UAAAsC,mBACJ,IAAIwH,EAAoBpK,KAAK+H,aAA2C,IAA5B/H,KAAK+H,YAAYsC,OAAmBrK,KAAK+H,YAAYsC,OAArB,EAC5ErK,KAAK+J,cAAe,EACpB/J,KAAKuG,wBAAwBxF,aAAef,KAAKuG,wBAAwBuC,UAAYsB,EAErFpK,KAAKsK,2BACLtK,KAAK+J,cAAe,EACpB/J,KAAKuK,aAAc,EACnBvK,KAAKyI,iBAGDnC,EAAAhG,UAAA6J,kBACJ,IAAInK,KAAKgK,YAAT,CAIAhK,KAAKgK,aAAc,EACnB,IAAA9G,EAAAlD,KAAAuG,wBAAA3D,UAAMI,EAAAE,EAAAF,MAAOxC,EAAA0C,EAAA1C,OAGb,GAFAR,KAAK+C,gBAAkBC,EACvBhD,KAAKiD,iBAAmBzC,GACnBR,KAAK+H,aAA2C,IAA5B/H,KAAK+H,YAAYsC,OAAc,CAEpD,IAAK,IAAId,EAAI,EAAGA,EAAIvJ,KAAK0G,kBAAkB2D,OAAQd,IAAK,CACpD,IAAIiB,EAAsCxK,KAAK0G,kBAAkB1B,IAAIuE,GAErEvJ,KAAK0G,kBAAkBpB,OAAOiE,GAE9BA,IAKJ,OAFAvJ,KAAKgK,aAAc,OACnBhK,KAAKuK,aAAc,GAGvBvK,KAAKyK,sBACL,IAASlB,EAAI,EAAGA,EAAIvJ,KAAK0G,kBAAkB2D,OAAQd,IAAK,CAChDiB,EAAsCxK,KAAK0G,kBAAkB1B,IAAIuE,GAErEvJ,KAAK0G,kBAAkBpB,OAAOiE,GAC9BvJ,KAAK8J,UAAUzE,YAAYmF,EAAME,QAAQvE,MAAOqE,GAChDjB,IAGJvJ,KAAK2K,cACL3K,KAAK8J,UAAUtE,kBACfxF,KAAKgK,aAAc,EACnBhK,KAAKuK,aAAc,IAGfjE,EAAAhG,UAAAgK,oCACJ,IAAI7E,EAAQzF,KAAKiD,iBAAmBjD,KAAKuG,wBAAwBuC,UAAY,EAC7E9I,KAAK8J,UAAUjE,mBAAmBJ,IAG9Ba,EAAAhG,UAAAqK,uBACJ,GAAoC,EAAhC3K,KAAK0G,kBAAkB2D,OAAY,CAGnC,IAFA,IAAIO,EAA2C5K,KAAK0G,kBAAkB1B,IAAI,GACtE6F,EAA0C7K,KAAK0G,kBAAkB1B,IAAIhF,KAAK0G,kBAAkB2D,OAAS,GAChGd,EAAIqB,EAAWF,QAAQvE,MAAQ,EAAGoD,GAAKvJ,KAAK8K,mBAAoBvB,IAAK,CAC1E,IAAIzE,EAAO9E,KAAK6E,QAAQ0E,GACxBvJ,KAAK+K,eAAexB,EAAGzE,GAAM,GAEjC,IAASyE,EAAIsB,EAAUH,QAAQvE,MAAQ,EAAGoD,GAAKvJ,KAAKgL,kBAAmBzB,IAAK,CACpEzE,EAAO9E,KAAK6E,QAAQ0E,GACxBvJ,KAAK+K,eAAexB,EAAGzE,GAAM,SAGjC,IAASyE,EAAIvJ,KAAK8K,mBAAoBvB,GAAKvJ,KAAKgL,kBAAmBzB,IAAK,CAChEzE,EAAO9E,KAAK6E,QAAQ0E,GACxBvJ,KAAK+K,eAAexB,EAAGzE,GAAM,KAMjCwB,EAAAhG,UAAA2K,qBAAYC,EAA0BC,GAC1CD,EAAY3J,MAAM6J,UAAY,kBAAkBD,EAAC,SACjDD,EAAY3J,MAAM8J,gBAAkB,kBAAkBF,EAAC,SACvDD,EAAY3J,MAAMyB,MAAWhD,KAAK+C,gBAAe,KACjDmI,EAAY3J,MAAMf,OAAYR,KAAKuG,wBAAwBuC,UAAS,KACpEoC,EAAY3J,MAAMwC,SAAW,YAGzBuC,EAAAhG,UAAAyK,wBAAehH,EAAkBe,EAAewG,GACpD,IAAIC,EAAYxH,EAAW/D,KAAKuG,wBAAwBuC,UACxD9I,KAAKiL,YAAY,EAAuCO,UAAU,GAAID,GAClED,EACAtL,KAAK0G,kBAAkB+E,OAAO3G,EAAM,GAEpC9E,KAAK0G,kBAAkB+E,OAAO3G,GAElCA,EAAK4G,YAGDpF,EAAAhG,UAAAmK,+BACJ,IAAIrI,EAAUpC,KAAK6I,SACf8C,EAAgBhD,KAAKiD,MAAMxJ,EAAUpC,KAAKuG,wBAAwBuC,WAClE+C,EAAsBzJ,EAAUuJ,EAAgB3L,KAAKuG,wBAAwBuC,UAC7EgD,EAAenD,KAAKoD,MAAM/L,KAAKiD,iBAAmB4I,GAAuB7L,KAAKuG,wBAAwBuC,WAAa6C,EACvH3L,KAAK8K,mBAAqBnC,KAAKqD,IAAIL,EAAgB,EAAG,GACtD3L,KAAKgL,kBAAoBrC,KAAKsD,IAAIH,EAAe,EAAG9L,KAAK+H,YAAYsC,OAAS,IAG1E/D,EAAAhG,UAAAuE,iBAAQd,GACZ,IAAIe,EAAO9E,KAAK8J,UAAUjF,QAAQd,GAC9BmE,EAAOlI,KAAK+H,YAAYhE,GACxBqC,EAAQpG,KAAK+H,YAAYsC,OAQ7B,OAPKvF,GAGD,EAAuC4F,QAAQxE,UAAYgC,EAC3D,EAAuCwC,QAAQvE,MAAQpC,EACvD,EAAuC2G,QAAQtE,MAAQA,GAJvDtB,EAAO9E,KAAKyG,UAAUyF,mBAAmB,IAAIjG,EAAYiC,EAAMnE,EAAUqC,IAMtEtB,uBAnSdqH,EAAAA,UAAS/I,KAAA,CAAC,CACPC,SAAU,gFA7EL1D,SAZLyM,EAAAA,uBAMAC,EAAAA,mBAEAC,EAAAA,6DAyHC5I,EAAAA,kCAEAA,EAAAA,mCAgBAA,EAAAA,cA6OL,SAAAgE,EAAwC6E,GACpC,OAAOA,EAAW,aAAYA,EE1YlC,IAAAC,EAAA,oDAKCC,EAAAA,SAAQrJ,KAAA,CAAC,CACRsJ,QAAS,CACPC,EAAAA,eAEFC,aAAc,CACZjN,EACA2G,GAEFuG,QAAS,CACPlN,EACA2G,SAfJ,gCHK0C","sourcesContent":["import { CommonModule } from \"@angular/common\"\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy, Output, Input } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, fromEvent } from 'rxjs';\nimport { skip, filter, tap, delay, take, concat, map, debounceTime } from 'rxjs/operators';\n\nexport const SCROLL_STOP_TIME_THRESHOLD = 200; // in milliseconds\n\nconst INVALID_POSITION = -1;\n\n@Component({\n    selector: 'gc-virtual-repeat-container', \n    template: `<div class=\"gc-virtual-repeat-container\" #listContainer [ngClass]=\"scrollbarStyle\">\r\n    <div class=\"gc-virtual-repeat-container\" [style.height]=\"holderHeightInPx\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n`,\n    styles: [`.gc-virtual-repeat-container{overflow-y:auto;overflow-x:hidden;position:relative;contain:layout;-webkit-overflow-scrolling:touch}.gc-virtual-repeat-container .gc-virtual-repeat-container-holder{width:100%;position:relative}.gc-virtual-repeat-container.normal{width:100%;height:100%}.gc-virtual-repeat-container.hide-scrollbar{position:absolute;top:0;left:0;bottom:0;right:0}`]\n})\nexport class VirtualRepeatContainer implements AfterViewInit, OnDestroy {\n    private _holderHeight: number = 0;\n    private _containerWidth: number = 0;\n    private _containerHeight: number = 0;\n\n    private _subscription: Subscription = new Subscription();\n\n    private _scrollStateChange: BehaviorSubject<SCROLL_STATE> = new BehaviorSubject(SCROLL_STATE.IDLE);\n    private _scrollPosition: BehaviorSubject<number> = new BehaviorSubject(0);\n    private _sizeChange: BehaviorSubject<number[]> = new BehaviorSubject([0, 0]);\n\n    private ignoreScrollEvent = false;\n\n    private _initialScrollTop = INVALID_POSITION;\n\n    currentScrollState: SCROLL_STATE = SCROLL_STATE.IDLE;\n\n    @ViewChild('listContainer') listContainer: ElementRef;\n\n    scrollbarStyle: string;\n    scrollbarWidth: number;\n\n    set holderHeight(height: number) {\n        if (typeof height !== 'undefined') {\n            this._holderHeight = height;\n            if (this._holderHeight === 0) {\n                this.listContainer.nativeElement.scrollTop = 0;\n            }\n            // When initialization, the list-holder doesn't not have its height. So the scrollTop should be delayed for waiting\n            // the list-holder rendered bigger than the list-container.\n            if (this._initialScrollTop !== INVALID_POSITION && this._holderHeight !== 0) {\n                setTimeout(() => {\n                    this.listContainer.nativeElement.scrollTop = this._initialScrollTop;\n                    this._initialScrollTop = INVALID_POSITION;\n                });\n            }\n        }\n    }\n\n    get holderHeight(): number {\n        return this._holderHeight;\n    }\n\n    get holderHeightInPx(): string {\n        if (this.holderHeight) {\n            return this.holderHeight + 'px';\n        }\n        return '100%';\n    }\n\n    /**\n     * scroll state change\n     */\n    get scrollStateChange(): Observable<SCROLL_STATE> {\n        return this._scrollStateChange.asObservable();\n    }\n\n    /**\n     * current scroll position.\n     */\n    @Output()\n    get scrollPosition(): Observable<number> {\n        return this._scrollPosition.asObservable();\n    }\n\n    /**\n     * list container width and height.\n     */\n    get sizeChange(): Observable<number[]> {\n        return this._sizeChange.asObservable();\n    }\n\n    @Input() rowHeight: number = 100;\n\n    @Input()\n    set newScrollPosition(p: number) {\n        // console.log('p', p);\n        this.listContainer.nativeElement.scrollTop = p;\n        // if list-holder has no height at the certain time. scrollTop will not be set.\n        if (!this.holderHeight) {\n            this._initialScrollTop = p;\n        }\n        this._scrollPosition.next(p);\n    }\n\n    /**\n     * UITimelineMeter is optional injection. when this component used inside a UITimelineMeter.\n     * it is responsible to update the scrollY\n     * @param _timelineMeter\n     */\n    constructor() {\n        this.scrollbarStyle = 'normal';\n        this.scrollbarWidth = getScrollBarWidth();\n    }\n\n    ngAfterViewInit(): void {\n        if (this.scrollbarStyle === 'hide-scrollbar') {\n            this.listContainer.nativeElement.style.right = (0 - this.scrollbarWidth) + 'px';\n            this.listContainer.nativeElement.style.paddingRight = this.scrollbarWidth + 'px';\n        }\n\n        if (window) {\n            this._subscription.add(fromEvent(window, 'resize')\n                .subscribe(() => {\n                    this.requestMeasure();\n                }));\n        }\n        this._subscription.add(\n            fromEvent(this.listContainer.nativeElement, 'scroll')\n                .pipe(\n                    filter(() => {\n                        if (this.ignoreScrollEvent) {\n                            this.ignoreScrollEvent = false;\n                            return false;\n                        }\n                        return true;\n                    }),\n                    map(() => {\n                        return this.listContainer.nativeElement.scrollTop;\n                    })\n                )\n                .subscribe((scrollY: number) => {\n                    this._scrollPosition.next(scrollY);\n                }));\n\n        /*this._subscription.add(\n            this.scrollPosition\n                .pipe(\n                    skip(1)\n                )\n                .subscribe((scrollY) => {\n                })\n        );*/\n\n        this._subscription.add(\n            this.scrollPosition\n                .pipe(\n                    tap(() => {\n                        if (this.currentScrollState === SCROLL_STATE.IDLE) {\n                            this.currentScrollState = SCROLL_STATE.SCROLLING;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }),\n                    debounceTime(SCROLL_STOP_TIME_THRESHOLD)\n                )\n                .subscribe(\n                    () => {\n                        if (this.currentScrollState === SCROLL_STATE.SCROLLING) {\n                            this.currentScrollState = SCROLL_STATE.IDLE;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }\n                ));\n\n        setTimeout(() => {\n            this.requestMeasure();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n\n    measure(): { width: number, height: number } {\n        if (this.listContainer && this.listContainer.nativeElement) {\n            // let measuredWidth = this.listContainer.nativeElement.clientWidth;\n            // let measuredHeight = this.listContainer.nativeElement.clientHeight;\n            let rect = this.listContainer.nativeElement.getBoundingClientRect();\n            this._containerWidth = rect.width - this.scrollbarWidth;\n            this._containerHeight = rect.height;\n            return { width: this._containerWidth, height: this._containerHeight };\n        }\n        return { width: 0, height: 0 };\n    }\n\n    requestMeasure() {\n        let { width, height } = this.measure();\n        this._sizeChange.next([width, height]);\n    }\n}\n\nexport enum SCROLL_STATE {\n    SCROLLING,\n    IDLE\n}\n\nexport function getScrollBarWidth() {\n    let inner = document.createElement('p');\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    let outer = document.createElement('div');\n    outer.style.position = \"absolute\";\n    outer.style.top = \"0px\";\n    outer.style.left = \"0px\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"200px\";\n    outer.style.height = \"150px\";\n    outer.style.overflow = \"hidden\";\n    outer.appendChild(inner);\n\n    document.body.appendChild(outer);\n    let w1 = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    let w2 = inner.offsetWidth;\n\n    if (w1 == w2) {\n        w2 = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n\n    return (w1 - w2);\n}\n\n","import {\r\n    Directive,\r\n    DoCheck,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    isDevMode,\r\n    IterableChangeRecord,\r\n    IterableChanges,\r\n    IterableDiffer,\r\n    IterableDiffers,\r\n    NgIterable,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    TrackByFunction,\r\n    ViewContainerRef,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n//import { VirtualRepeatContainer } from 'virtual-repeat-angular-lib';\r\n\r\nexport class Recycler {\r\n    private limit: number = 0;\r\n    private _scrapViews: Map<number, ViewRef> = new Map();\r\n\r\n    getView(position: number): ViewRef | null {\r\n        let view = this._scrapViews.get(position);\r\n        if (!view && this._scrapViews.size > 0) {\r\n            position = this._scrapViews.keys().next().value;\r\n            view = this._scrapViews.get(position);\r\n        }\r\n        if (view) {\r\n            this._scrapViews.delete(position);\r\n        }\r\n        return view || null;\r\n    }\r\n\r\n    recycleView(position: number, view: ViewRef) {\r\n        view.detach();\r\n        this._scrapViews.set(position, view);\r\n    }\r\n\r\n    /**\r\n     * scrap view count should not exceed the number of current attached views.\r\n     */\r\n    pruneScrapViews() {\r\n        if (this.limit <= 1) {\r\n            return;\r\n        }\r\n        let keyIterator = this._scrapViews.keys();\r\n        let key: number;\r\n        while (this._scrapViews.size > this.limit) {\r\n            key = keyIterator.next().value;\r\n            this._scrapViews.get(key).destroy();\r\n            this._scrapViews.delete(key);\r\n        }\r\n    }\r\n\r\n    setScrapViewsLimit(limit: number) {\r\n        this.limit = limit;\r\n        this.pruneScrapViews();\r\n    }\r\n\r\n    clean() {\r\n        this._scrapViews.forEach((view: ViewRef) => {\r\n            view.destroy();\r\n        });\r\n        this._scrapViews.clear();\r\n    }\r\n}\r\n\r\nexport class InfiniteRow {\r\n    constructor(public $implicit: any, public index: number, public count: number) {\r\n    }\r\n\r\n    get first(): boolean {\r\n        return this.index === 0;\r\n    }\r\n\r\n    get last(): boolean {\r\n        return this.index === this.count - 1;\r\n    }\r\n\r\n    get even(): boolean {\r\n        return this.index % 2 === 0;\r\n    }\r\n\r\n    get odd(): boolean {\r\n        return !this.even;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[virtualRepeat][virtualRepeatOf]'\r\n})\r\nexport class VirtualRepeat<T> implements OnChanges, DoCheck, OnInit, OnDestroy {\r\n\r\n    private _differ: IterableDiffer<T>;\r\n    private _trackByFn: TrackByFunction<T>;\r\n    private _subscription: Subscription = new Subscription();\r\n    /**\r\n     * scroll offset of y-axis in pixel\r\n     */\r\n    private _scrollY: number = 0;\r\n    /**\r\n     * first visible item index in collection\r\n     */\r\n    private _firstItemPosition: number;\r\n    /**\r\n     * last visible item index in collection\r\n     */\r\n    private _lastItemPosition: number;\r\n\r\n    private _containerWidth: number;\r\n    private _containerHeight: number;\r\n\r\n    /**\r\n     * when this value is true, a full clean layout is required, every element must be reposition\r\n     */\r\n    private _invalidate: boolean = true;\r\n    /**\r\n     * when this value is true, a layout is in process\r\n     */\r\n    private _isInLayout: boolean = false;\r\n\r\n    private _isInMeasure: boolean = false;\r\n\r\n    private _pendingMeasurement: number;\r\n\r\n    private _collection: any[];\r\n\r\n    private _recycler: Recycler = new Recycler();\r\n\r\n    @Input() virtualRepeatOf: NgIterable<T>;\r\n\r\n    @Input()\r\n    set infiniteForTrackBy(fn: TrackByFunction<T>) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n            if (<any>console && <any>console.warn) {\r\n                console.warn(\r\n                    `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n\r\n    get infiniteForTrackBy(): TrackByFunction<T> {\r\n        return this._trackByFn;\r\n    }\r\n\r\n    @Input()\r\n    set infiniteForTemplate(value: TemplateRef<InfiniteRow>) {\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n\r\n    constructor(private _virtualRepeatContainer: VirtualRepeatContainer,\r\n        private _differs: IterableDiffers,\r\n        private _template: TemplateRef<InfiniteRow>,\r\n        private _viewContainerRef: ViewContainerRef) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('virtualRepeatOf' in changes) {\r\n            // React on virtualRepeatOf only once all inputs have been initialized\r\n            const value = changes['virtualRepeatOf'].currentValue;\r\n            if (!this._differ && value) {\r\n                try {\r\n                    this._differ = this._differs.find(value).create(this._trackByFn);\r\n                } catch (e) {\r\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (this._differ) {\r\n            const changes = this._differ.diff(this.virtualRepeatOf);\r\n            if (changes) {\r\n                this.applyChanges(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyChanges(changes: IterableChanges<T>) {\r\n        if (!this._collection) {\r\n            this._collection = [];\r\n        }\r\n        let isMeasurementRequired = false;\r\n\r\n        changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\r\n            if (item.previousIndex == null) {\r\n                // new item\r\n                // console.log('new item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(currentIndex, 0, item.item);\r\n            } else if (currentIndex == null) {\r\n                // remove item\r\n                // console.log('remove item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(adjustedPreviousIndex, 1);\r\n            } else {\r\n                // move item\r\n                // console.log('move item', item, adjustedPreviousIndex, currentIndex);\r\n                this._collection.splice(currentIndex, 0, this._collection.splice(adjustedPreviousIndex, 1)[0]);\r\n            }\r\n        });\r\n        \r\n        changes.forEachIdentityChange((record: any) => {\r\n            this._collection[record.currentIndex] = record.item;\r\n        });\r\n\r\n        if (isMeasurementRequired) {\r\n            this.requestMeasure();\r\n        }\r\n\r\n        this.requestLayout();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._subscription.add(this._virtualRepeatContainer.scrollPosition\r\n            .pipe(\r\n                filter((scrollY) => {\r\n                    return Math.abs(scrollY - this._scrollY) >= this._virtualRepeatContainer.rowHeight;\r\n                })\r\n            )\r\n            .subscribe(\r\n                (scrollY) => {\r\n                    this._scrollY = scrollY;\r\n                    this.requestLayout();\r\n                }\r\n            ));\r\n\r\n        this._subscription.add(this._virtualRepeatContainer.sizeChange.subscribe(\r\n            ([width, height]) => {\r\n                // console.log('sizeChange: ', width, height);\r\n                this._containerWidth = width;\r\n                this._containerHeight = height;\r\n                this.requestMeasure();\r\n            }\r\n        ));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n        this._recycler.clean();\r\n    }\r\n\r\n    private requestMeasure() {\r\n        if (this._isInMeasure || this._isInLayout) {\r\n            clearTimeout(this._pendingMeasurement);\r\n            this._pendingMeasurement = window.setTimeout(() => {\r\n                this.requestMeasure();\r\n            }, 60);\r\n            return;\r\n        }\r\n        this.measure();\r\n    }\r\n\r\n    private requestLayout() {\r\n        // console.log('requestLayout', this._virtualRepeatContainer.rowHeight, this._containerHeight, this._collection.length);\r\n        if (!this._isInMeasure && this._virtualRepeatContainer.rowHeight) {\r\n            this.layout();\r\n        }\r\n    }\r\n\r\n    private measure() {\r\n        let collectionNumber = !this._collection || this._collection.length === 0 ? 0 : this._collection.length;\r\n        this._isInMeasure = true;\r\n        this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer.rowHeight * collectionNumber;\r\n        // calculate a approximate number of which a view can contain\r\n        this.calculateScrapViewsLimit();\r\n        this._isInMeasure = false;\r\n        this._invalidate = true;\r\n        this.requestLayout();\r\n    }\r\n\r\n    private layout() {\r\n        if (this._isInLayout) {\r\n            return;\r\n        }\r\n        // console.log('on layout');\r\n        this._isInLayout = true;\r\n        let { width, height } = this._virtualRepeatContainer.measure();\r\n        this._containerWidth = width;\r\n        this._containerHeight = height;\r\n        if (!this._collection || this._collection.length === 0) {\r\n            // detach all views without recycle them.\r\n            for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n                let child = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(i);\r\n                // if (child.context.index < this._firstItemPosition || child.context.index > this._lastItemPosition || this._invalidate) {\r\n                this._viewContainerRef.detach(i);\r\n                // this._recycler.recycleView(child.context.index, child);\r\n                i--;\r\n                // }\r\n            }\r\n            this._isInLayout = false;\r\n            this._invalidate = false;\r\n            return;\r\n        }\r\n        this.findPositionInRange();\r\n        for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n            let child = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(i);\r\n            // if (child.context.index < this._firstItemPosition || child.context.index > this._lastItemPosition || this._invalidate) {\r\n            this._viewContainerRef.detach(i);\r\n            this._recycler.recycleView(child.context.index, child);\r\n            i--;\r\n            // }\r\n        }\r\n        this.insertViews();\r\n        this._recycler.pruneScrapViews();\r\n        this._isInLayout = false;\r\n        this._invalidate = false;\r\n    }\r\n\r\n    private calculateScrapViewsLimit() {\r\n        let limit = this._containerHeight / this._virtualRepeatContainer.rowHeight + 2;\r\n        this._recycler.setScrapViewsLimit(limit);\r\n    }\r\n\r\n    private insertViews() {\r\n        if (this._viewContainerRef.length > 0) {\r\n            let firstChild = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(0);\r\n            let lastChild = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(this._viewContainerRef.length - 1);\r\n            for (let i = firstChild.context.index - 1; i >= this._firstItemPosition; i--) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, true);\r\n            }\r\n            for (let i = lastChild.context.index + 1; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        } else {\r\n            for (let i = this._firstItemPosition; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private applyStyles(viewElement: HTMLElement, y: number) {\r\n        viewElement.style.transform = `translate3d(0, ${y}px, 0)`;\r\n        viewElement.style.webkitTransform = `translate3d(0, ${y}px, 0)`;\r\n        viewElement.style.width = `${this._containerWidth}px`;\r\n        viewElement.style.height = `${this._virtualRepeatContainer.rowHeight}px`;\r\n        viewElement.style.position = 'absolute';\r\n    }\r\n\r\n    private dispatchLayout(position: number, view: ViewRef, addBefore: boolean) {\r\n        let startPosY = position * this._virtualRepeatContainer.rowHeight;\r\n        this.applyStyles((view as EmbeddedViewRef<InfiniteRow>).rootNodes[0], startPosY);\r\n        if (addBefore) {\r\n            this._viewContainerRef.insert(view, 0);\r\n        } else {\r\n            this._viewContainerRef.insert(view);\r\n        }\r\n        view.reattach();\r\n    }\r\n\r\n    private findPositionInRange() {\r\n        let scrollY = this._scrollY;\r\n        let firstPosition = Math.floor(scrollY / this._virtualRepeatContainer.rowHeight);\r\n        let firstPositionOffset = scrollY - firstPosition * this._virtualRepeatContainer.rowHeight;\r\n        let lastPosition = Math.ceil((this._containerHeight + firstPositionOffset) / this._virtualRepeatContainer.rowHeight) + firstPosition;\r\n        this._firstItemPosition = Math.max(firstPosition - 1, 0);\r\n        this._lastItemPosition = Math.min(lastPosition + 1, this._collection.length - 1);\r\n    }\r\n\r\n    private getView(position: number): ViewRef {\r\n        let view = this._recycler.getView(position);\r\n        let item = this._collection[position];\r\n        let count = this._collection.length;\r\n        if (!view) {\r\n            view = this._template.createEmbeddedView(new InfiniteRow(item, position, count));\r\n        } else {\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.$implicit = item;\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.index = position;\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.count = count;\r\n        }\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\nexport function getTypeNameForDebugging(type: any): string {\r\n    return type['name'] || typeof type;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\nimport { VirtualRepeat } from './virtual-repeat';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    VirtualRepeatContainer,\n    VirtualRepeat\n  ],\n  exports: [\n    VirtualRepeatContainer,\n    VirtualRepeat\n  ]\n})\nexport class VirtualRepeatAngularLibModule { }\n"]}