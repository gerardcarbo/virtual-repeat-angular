{"version":3,"file":"virtual-repeat-angular-lib.js.map","sources":["ng://virtual-repeat-angular-lib/lib/virtual-repeat-container.ts","ng://virtual-repeat-angular-lib/lib/virtual-repeat.ts","ng://virtual-repeat-angular-lib/lib/virtual-repeat-angular-lib.module.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\"\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy, Output, Input } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, fromEvent } from 'rxjs';\nimport { skip, filter, tap, delay, take, concat, map, debounceTime } from 'rxjs/operators';\n\nexport const SCROLL_STOP_TIME_THRESHOLD = 200; // in milliseconds\n\nconst INVALID_POSITION = -1;\n\n@Component({\n    selector: 'gc-virtual-repeat-container', \n    template: `<div class=\"gc-virtual-repeat-container\" #listContainer [ngClass]=\"scrollbarStyle\">\r\n    <div class=\"gc-virtual-repeat-container\" [style.height]=\"holderHeightInPx\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n`,\n    styles: [`.gc-virtual-repeat-container{overflow-y:auto;overflow-x:hidden;position:relative;contain:layout;-webkit-overflow-scrolling:touch}.gc-virtual-repeat-container .gc-virtual-repeat-container-holder{width:100%;position:relative}.gc-virtual-repeat-container.normal{width:100%;height:100%}.gc-virtual-repeat-container.hide-scrollbar{position:absolute;top:0;left:0;bottom:0;right:0}`]\n})\nexport class VirtualRepeatContainer implements AfterViewInit, OnDestroy {\n    private _holderHeight: number = 0;\n    private _containerWidth: number = 0;\n    private _containerHeight: number = 0;\n\n    private _subscription: Subscription = new Subscription();\n\n    private _scrollStateChange: BehaviorSubject<SCROLL_STATE> = new BehaviorSubject(SCROLL_STATE.IDLE);\n    private _scrollPosition: BehaviorSubject<number> = new BehaviorSubject(0);\n    private _sizeChange: BehaviorSubject<number[]> = new BehaviorSubject([0, 0]);\n\n    private ignoreScrollEvent = false;\n\n    private _initialScrollTop = INVALID_POSITION;\n\n    currentScrollState: SCROLL_STATE = SCROLL_STATE.IDLE;\n\n    @ViewChild('listContainer') listContainer: ElementRef;\n\n    scrollbarStyle: string;\n    scrollbarWidth: number;\n\n    set holderHeight(height: number) {\n        if (typeof height !== 'undefined') {\n            this._holderHeight = height;\n            if (this._holderHeight === 0) {\n                this.listContainer.nativeElement.scrollTop = 0;\n            }\n            // When initialization, the list-holder doesn't not have its height. So the scrollTop should be delayed for waiting\n            // the list-holder rendered bigger than the list-container.\n            if (this._initialScrollTop !== INVALID_POSITION && this._holderHeight !== 0) {\n                setTimeout(() => {\n                    this.listContainer.nativeElement.scrollTop = this._initialScrollTop;\n                    this._initialScrollTop = INVALID_POSITION;\n                });\n            }\n        }\n    }\n\n    get holderHeight(): number {\n        return this._holderHeight;\n    }\n\n    get holderHeightInPx(): string {\n        if (this.holderHeight) {\n            return this.holderHeight + 'px';\n        }\n        return '100%';\n    }\n\n    /**\n     * scroll state change\n     */\n    get scrollStateChange(): Observable<SCROLL_STATE> {\n        return this._scrollStateChange.asObservable();\n    }\n\n    /**\n     * current scroll position.\n     */\n    @Output()\n    get scrollPosition(): Observable<number> {\n        return this._scrollPosition.asObservable();\n    }\n\n    /**\n     * list container width and height.\n     */\n    get sizeChange(): Observable<number[]> {\n        return this._sizeChange.asObservable();\n    }\n\n    @Input() rowHeight: number = 100;\n\n    @Input()\n    set newScrollPosition(p: number) {\n        // console.log('p', p);\n        this.listContainer.nativeElement.scrollTop = p;\n        // if list-holder has no height at the certain time. scrollTop will not be set.\n        if (!this.holderHeight) {\n            this._initialScrollTop = p;\n        }\n        this._scrollPosition.next(p);\n    }\n\n    /**\n     * UITimelineMeter is optional injection. when this component used inside a UITimelineMeter.\n     * it is responsible to update the scrollY\n     * @param _timelineMeter\n     */\n    constructor() {\n        this.scrollbarStyle = 'normal';\n        this.scrollbarWidth = getScrollBarWidth();\n    }\n\n    ngAfterViewInit(): void {\n        if (this.scrollbarStyle === 'hide-scrollbar') {\n            this.listContainer.nativeElement.style.right = (0 - this.scrollbarWidth) + 'px';\n            this.listContainer.nativeElement.style.paddingRight = this.scrollbarWidth + 'px';\n        }\n\n        if (window) {\n            this._subscription.add(fromEvent(window, 'resize')\n                .subscribe(() => {\n                    this.requestMeasure();\n                }));\n        }\n        this._subscription.add(\n            fromEvent(this.listContainer.nativeElement, 'scroll')\n                .pipe(\n                    filter(() => {\n                        if (this.ignoreScrollEvent) {\n                            this.ignoreScrollEvent = false;\n                            return false;\n                        }\n                        return true;\n                    }),\n                    map(() => {\n                        return this.listContainer.nativeElement.scrollTop;\n                    })\n                )\n                .subscribe((scrollY: number) => {\n                    this._scrollPosition.next(scrollY);\n                }));\n\n        /*this._subscription.add(\n            this.scrollPosition\n                .pipe(\n                    skip(1)\n                )\n                .subscribe((scrollY) => {\n                })\n        );*/\n\n        this._subscription.add(\n            this.scrollPosition\n                .pipe(\n                    tap(() => {\n                        if (this.currentScrollState === SCROLL_STATE.IDLE) {\n                            this.currentScrollState = SCROLL_STATE.SCROLLING;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }),\n                    debounceTime(SCROLL_STOP_TIME_THRESHOLD)\n                )\n                .subscribe(\n                    () => {\n                        if (this.currentScrollState === SCROLL_STATE.SCROLLING) {\n                            this.currentScrollState = SCROLL_STATE.IDLE;\n                            this._scrollStateChange.next(this.currentScrollState);\n                        }\n                    }\n                ));\n\n        setTimeout(() => {\n            this.requestMeasure();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n\n    measure(): { width: number, height: number } {\n        if (this.listContainer && this.listContainer.nativeElement) {\n            // let measuredWidth = this.listContainer.nativeElement.clientWidth;\n            // let measuredHeight = this.listContainer.nativeElement.clientHeight;\n            let rect = this.listContainer.nativeElement.getBoundingClientRect();\n            this._containerWidth = rect.width - this.scrollbarWidth;\n            this._containerHeight = rect.height;\n            return { width: this._containerWidth, height: this._containerHeight };\n        }\n        return { width: 0, height: 0 };\n    }\n\n    requestMeasure() {\n        let { width, height } = this.measure();\n        this._sizeChange.next([width, height]);\n    }\n}\n\nexport enum SCROLL_STATE {\n    SCROLLING,\n    IDLE\n}\n\nexport function getScrollBarWidth() {\n    let inner = document.createElement('p');\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    let outer = document.createElement('div');\n    outer.style.position = \"absolute\";\n    outer.style.top = \"0px\";\n    outer.style.left = \"0px\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"200px\";\n    outer.style.height = \"150px\";\n    outer.style.overflow = \"hidden\";\n    outer.appendChild(inner);\n\n    document.body.appendChild(outer);\n    let w1 = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    let w2 = inner.offsetWidth;\n\n    if (w1 == w2) {\n        w2 = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n\n    return (w1 - w2);\n}\n\n","import {\r\n    Directive,\r\n    DoCheck,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    isDevMode,\r\n    IterableChangeRecord,\r\n    IterableChanges,\r\n    IterableDiffer,\r\n    IterableDiffers,\r\n    NgIterable,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    TrackByFunction,\r\n    ViewContainerRef,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n//import { VirtualRepeatContainer } from 'virtual-repeat-angular-lib';\r\n\r\nexport class Recycler {\r\n    private limit: number = 0;\r\n    private _scrapViews: Map<number, ViewRef> = new Map();\r\n\r\n    getView(position: number): ViewRef | null {\r\n        let view = this._scrapViews.get(position);\r\n        if (!view && this._scrapViews.size > 0) {\r\n            position = this._scrapViews.keys().next().value;\r\n            view = this._scrapViews.get(position);\r\n        }\r\n        if (view) {\r\n            this._scrapViews.delete(position);\r\n        }\r\n        return view || null;\r\n    }\r\n\r\n    recycleView(position: number, view: ViewRef) {\r\n        view.detach();\r\n        this._scrapViews.set(position, view);\r\n    }\r\n\r\n    /**\r\n     * scrap view count should not exceed the number of current attached views.\r\n     */\r\n    pruneScrapViews() {\r\n        if (this.limit <= 1) {\r\n            return;\r\n        }\r\n        let keyIterator = this._scrapViews.keys();\r\n        let key: number;\r\n        while (this._scrapViews.size > this.limit) {\r\n            key = keyIterator.next().value;\r\n            this._scrapViews.get(key).destroy();\r\n            this._scrapViews.delete(key);\r\n        }\r\n    }\r\n\r\n    setScrapViewsLimit(limit: number) {\r\n        this.limit = limit;\r\n        this.pruneScrapViews();\r\n    }\r\n\r\n    clean() {\r\n        this._scrapViews.forEach((view: ViewRef) => {\r\n            view.destroy();\r\n        });\r\n        this._scrapViews.clear();\r\n    }\r\n}\r\n\r\nexport class InfiniteRow {\r\n    constructor(public $implicit: any, public index: number, public count: number) {\r\n    }\r\n\r\n    get first(): boolean {\r\n        return this.index === 0;\r\n    }\r\n\r\n    get last(): boolean {\r\n        return this.index === this.count - 1;\r\n    }\r\n\r\n    get even(): boolean {\r\n        return this.index % 2 === 0;\r\n    }\r\n\r\n    get odd(): boolean {\r\n        return !this.even;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[virtualRepeat][virtualRepeatOf]'\r\n})\r\nexport class VirtualRepeat<T> implements OnChanges, DoCheck, OnInit, OnDestroy {\r\n\r\n    private _differ: IterableDiffer<T>;\r\n    private _trackByFn: TrackByFunction<T>;\r\n    private _subscription: Subscription = new Subscription();\r\n    /**\r\n     * scroll offset of y-axis in pixel\r\n     */\r\n    private _scrollY: number = 0;\r\n    /**\r\n     * first visible item index in collection\r\n     */\r\n    private _firstItemPosition: number;\r\n    /**\r\n     * last visible item index in collection\r\n     */\r\n    private _lastItemPosition: number;\r\n\r\n    private _containerWidth: number;\r\n    private _containerHeight: number;\r\n\r\n    /**\r\n     * when this value is true, a full clean layout is required, every element must be reposition\r\n     */\r\n    private _invalidate: boolean = true;\r\n    /**\r\n     * when this value is true, a layout is in process\r\n     */\r\n    private _isInLayout: boolean = false;\r\n\r\n    private _isInMeasure: boolean = false;\r\n\r\n    private _pendingMeasurement: number;\r\n\r\n    private _collection: any[];\r\n\r\n    private _recycler: Recycler = new Recycler();\r\n\r\n    @Input() virtualRepeatOf: NgIterable<T>;\r\n\r\n    @Input()\r\n    set infiniteForTrackBy(fn: TrackByFunction<T>) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n            if (<any>console && <any>console.warn) {\r\n                console.warn(\r\n                    `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n\r\n    get infiniteForTrackBy(): TrackByFunction<T> {\r\n        return this._trackByFn;\r\n    }\r\n\r\n    @Input()\r\n    set infiniteForTemplate(value: TemplateRef<InfiniteRow>) {\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n\r\n    constructor(private _virtualRepeatContainer: VirtualRepeatContainer,\r\n        private _differs: IterableDiffers,\r\n        private _template: TemplateRef<InfiniteRow>,\r\n        private _viewContainerRef: ViewContainerRef) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('virtualRepeatOf' in changes) {\r\n            // React on virtualRepeatOf only once all inputs have been initialized\r\n            const value = changes['virtualRepeatOf'].currentValue;\r\n            if (!this._differ && value) {\r\n                try {\r\n                    this._differ = this._differs.find(value).create(this._trackByFn);\r\n                } catch (e) {\r\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (this._differ) {\r\n            const changes = this._differ.diff(this.virtualRepeatOf);\r\n            if (changes) {\r\n                this.applyChanges(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyChanges(changes: IterableChanges<T>) {\r\n        if (!this._collection) {\r\n            this._collection = [];\r\n        }\r\n        let isMeasurementRequired = false;\r\n\r\n        changes.forEachOperation((item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\r\n            if (item.previousIndex == null) {\r\n                // new item\r\n                // console.log('new item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(currentIndex, 0, item.item);\r\n            } else if (currentIndex == null) {\r\n                // remove item\r\n                // console.log('remove item', item, adjustedPreviousIndex, currentIndex);\r\n                isMeasurementRequired = true;\r\n                this._collection.splice(adjustedPreviousIndex, 1);\r\n            } else {\r\n                // move item\r\n                // console.log('move item', item, adjustedPreviousIndex, currentIndex);\r\n                this._collection.splice(currentIndex, 0, this._collection.splice(adjustedPreviousIndex, 1)[0]);\r\n            }\r\n        });\r\n        \r\n        changes.forEachIdentityChange((record: any) => {\r\n            this._collection[record.currentIndex] = record.item;\r\n        });\r\n\r\n        if (isMeasurementRequired) {\r\n            this.requestMeasure();\r\n        }\r\n\r\n        this.requestLayout();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._subscription.add(this._virtualRepeatContainer.scrollPosition\r\n            .pipe(\r\n                filter((scrollY) => {\r\n                    return Math.abs(scrollY - this._scrollY) >= this._virtualRepeatContainer.rowHeight;\r\n                })\r\n            )\r\n            .subscribe(\r\n                (scrollY) => {\r\n                    this._scrollY = scrollY;\r\n                    this.requestLayout();\r\n                }\r\n            ));\r\n\r\n        this._subscription.add(this._virtualRepeatContainer.sizeChange.subscribe(\r\n            ([width, height]) => {\r\n                // console.log('sizeChange: ', width, height);\r\n                this._containerWidth = width;\r\n                this._containerHeight = height;\r\n                this.requestMeasure();\r\n            }\r\n        ));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n        this._recycler.clean();\r\n    }\r\n\r\n    private requestMeasure() {\r\n        if (this._isInMeasure || this._isInLayout) {\r\n            clearTimeout(this._pendingMeasurement);\r\n            this._pendingMeasurement = window.setTimeout(() => {\r\n                this.requestMeasure();\r\n            }, 60);\r\n            return;\r\n        }\r\n        this.measure();\r\n    }\r\n\r\n    private requestLayout() {\r\n        // console.log('requestLayout', this._virtualRepeatContainer.rowHeight, this._containerHeight, this._collection.length);\r\n        if (!this._isInMeasure && this._virtualRepeatContainer.rowHeight) {\r\n            this.layout();\r\n        }\r\n    }\r\n\r\n    private measure() {\r\n        let collectionNumber = !this._collection || this._collection.length === 0 ? 0 : this._collection.length;\r\n        this._isInMeasure = true;\r\n        this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer.rowHeight * collectionNumber;\r\n        // calculate a approximate number of which a view can contain\r\n        this.calculateScrapViewsLimit();\r\n        this._isInMeasure = false;\r\n        this._invalidate = true;\r\n        this.requestLayout();\r\n    }\r\n\r\n    private layout() {\r\n        if (this._isInLayout) {\r\n            return;\r\n        }\r\n        // console.log('on layout');\r\n        this._isInLayout = true;\r\n        let { width, height } = this._virtualRepeatContainer.measure();\r\n        this._containerWidth = width;\r\n        this._containerHeight = height;\r\n        if (!this._collection || this._collection.length === 0) {\r\n            // detach all views without recycle them.\r\n            for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n                let child = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(i);\r\n                // if (child.context.index < this._firstItemPosition || child.context.index > this._lastItemPosition || this._invalidate) {\r\n                this._viewContainerRef.detach(i);\r\n                // this._recycler.recycleView(child.context.index, child);\r\n                i--;\r\n                // }\r\n            }\r\n            this._isInLayout = false;\r\n            this._invalidate = false;\r\n            return;\r\n        }\r\n        this.findPositionInRange();\r\n        for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n            let child = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(i);\r\n            // if (child.context.index < this._firstItemPosition || child.context.index > this._lastItemPosition || this._invalidate) {\r\n            this._viewContainerRef.detach(i);\r\n            this._recycler.recycleView(child.context.index, child);\r\n            i--;\r\n            // }\r\n        }\r\n        this.insertViews();\r\n        this._recycler.pruneScrapViews();\r\n        this._isInLayout = false;\r\n        this._invalidate = false;\r\n    }\r\n\r\n    private calculateScrapViewsLimit() {\r\n        let limit = this._containerHeight / this._virtualRepeatContainer.rowHeight + 2;\r\n        this._recycler.setScrapViewsLimit(limit);\r\n    }\r\n\r\n    private insertViews() {\r\n        if (this._viewContainerRef.length > 0) {\r\n            let firstChild = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(0);\r\n            let lastChild = <EmbeddedViewRef<InfiniteRow>>this._viewContainerRef.get(this._viewContainerRef.length - 1);\r\n            for (let i = firstChild.context.index - 1; i >= this._firstItemPosition; i--) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, true);\r\n            }\r\n            for (let i = lastChild.context.index + 1; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        } else {\r\n            for (let i = this._firstItemPosition; i <= this._lastItemPosition; i++) {\r\n                let view = this.getView(i);\r\n                this.dispatchLayout(i, view, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private applyStyles(viewElement: HTMLElement, y: number) {\r\n        viewElement.style.transform = `translate3d(0, ${y}px, 0)`;\r\n        viewElement.style.webkitTransform = `translate3d(0, ${y}px, 0)`;\r\n        viewElement.style.width = `${this._containerWidth}px`;\r\n        viewElement.style.height = `${this._virtualRepeatContainer.rowHeight}px`;\r\n        viewElement.style.position = 'absolute';\r\n    }\r\n\r\n    private dispatchLayout(position: number, view: ViewRef, addBefore: boolean) {\r\n        let startPosY = position * this._virtualRepeatContainer.rowHeight;\r\n        this.applyStyles((view as EmbeddedViewRef<InfiniteRow>).rootNodes[0], startPosY);\r\n        if (addBefore) {\r\n            this._viewContainerRef.insert(view, 0);\r\n        } else {\r\n            this._viewContainerRef.insert(view);\r\n        }\r\n        view.reattach();\r\n    }\r\n\r\n    private findPositionInRange() {\r\n        let scrollY = this._scrollY;\r\n        let firstPosition = Math.floor(scrollY / this._virtualRepeatContainer.rowHeight);\r\n        let firstPositionOffset = scrollY - firstPosition * this._virtualRepeatContainer.rowHeight;\r\n        let lastPosition = Math.ceil((this._containerHeight + firstPositionOffset) / this._virtualRepeatContainer.rowHeight) + firstPosition;\r\n        this._firstItemPosition = Math.max(firstPosition - 1, 0);\r\n        this._lastItemPosition = Math.min(lastPosition + 1, this._collection.length - 1);\r\n    }\r\n\r\n    private getView(position: number): ViewRef {\r\n        let view = this._recycler.getView(position);\r\n        let item = this._collection[position];\r\n        let count = this._collection.length;\r\n        if (!view) {\r\n            view = this._template.createEmbeddedView(new InfiniteRow(item, position, count));\r\n        } else {\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.$implicit = item;\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.index = position;\r\n            (view as EmbeddedViewRef<InfiniteRow>).context.count = count;\r\n        }\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\nexport function getTypeNameForDebugging(type: any): string {\r\n    return type['name'] || typeof type;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\nimport { VirtualRepeat } from './virtual-repeat';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    VirtualRepeatContainer,\n    VirtualRepeat\n  ],\n  exports: [\n    VirtualRepeatContainer,\n    VirtualRepeat\n  ]\n})\nexport class VirtualRepeatAngularLibModule { }\n"],"names":[],"mappings":"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"}
