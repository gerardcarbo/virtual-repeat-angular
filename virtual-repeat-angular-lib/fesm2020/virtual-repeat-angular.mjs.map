{"version":3,"file":"virtual-repeat-angular.mjs","sources":["../../../projects/virtual-repeat-angular-lib/src/lib/logger.service.ts","../../../projects/virtual-repeat-angular-lib/src/lib/rxjs.operators.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-container.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-container.html","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat.base.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-collection.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-asynch.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-reactive.ts","../../../projects/virtual-repeat-angular-lib/src/lib/virtual-repeat-angular-lib.module.ts","../../../projects/virtual-repeat-angular-lib/src/public_api.ts","../../../projects/virtual-repeat-angular-lib/src/virtual-repeat-angular.ts"],"sourcesContent":["import { noop } from 'rxjs';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class LoggerService {\n  log: any;\n  constructor() {\n    const bLog = Boolean(localStorage.getItem('gcvra_log')); // enable log\n    const filterLog = localStorage.getItem('gcvra_log_filter'); // filter log lines (; separated list)\n    let filterLogTerms: string[];\n    if (filterLog) {\n      filterLogTerms = filterLog\n        .split(';')\n        .map(term => term.trim().toLowerCase())\n        .filter(term => !!term);\n    }\n    if (bLog) {\n      if (filterLog) {\n        this.log = function(text: string, ...args: any[]) {\n          let done = false;\n          filterLogTerms.forEach(term => {\n            if (!done && text.toLowerCase().indexOf(term) !== -1) {\n              console.log(text, ...args);\n              done = true;\n            }\n          });\n          return;\n        };\n      } else {\n        this.log = function(text: string, ...args: any[]) {\n          console.log(text, ...args);\n        };\n      }\n    } else {\n      this.log = noop;\n    }\n  }\n}\n","import { Observable, empty, of, timer } from 'rxjs';\r\nimport { flatMap, delay } from 'rxjs/operators';\r\nimport { LoggerService } from './logger.service';\r\n\r\nconst logger = new LoggerService();\r\n\r\n/**\r\n * If observable value has not changed act as throttleTime, but if changed notify it inmediatly.\r\n * @param throttleTime throttle time in miliseconds.\r\n */\r\nexport function throttleTimeUntilChanged(throttleTime: number) {\r\n  return (source: Observable<any>) => {\r\n    return new Observable(observer => {\r\n      let lastSeen = {};\r\n      let lastSeenTime = 0;\r\n\r\n      return source\r\n        .pipe(\r\n          flatMap((value: any) => {\r\n            // logger.log(`throttleTimeUntilChanged: value: ${value} last: ${lastSeen}`);\r\n            const now = Date.now();\r\n            if (value === lastSeen && now - lastSeenTime < throttleTime) {\r\n              return empty();\r\n            } else {\r\n              lastSeen = value;\r\n              lastSeenTime = now;\r\n              return of(lastSeen);\r\n            }\r\n          })\r\n        )\r\n        .subscribe(observer);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Remove spurious changes on a boolean observable.\r\n * @param glitchSize max size of the gitches (in miliseconds) to be removed.\r\n */\r\nexport function deglitch(glitchSize: number) {\r\n  return (source: Observable<boolean>) => {\r\n    return new Observable(observer => {\r\n      let currentState: boolean;\r\n      let lastState: boolean;\r\n      let lastStateTime: number;\r\n\r\n      return source\r\n        .pipe(\r\n          flatMap((value: boolean) => {\r\n            // logger.log(`deglitch: value: ${value} currentState: ${currentState} `);\r\n            lastStateTime = Date.now();\r\n            lastState = value;\r\n            if (currentState === undefined) {\r\n              currentState = value;\r\n              return of(value);\r\n            }\r\n            if (value === currentState) {\r\n              return empty();\r\n            } else {\r\n              return of(value).pipe(\r\n                delay(glitchSize),\r\n                flatMap((value_: boolean) => {\r\n                  const elapsed = Date.now() - lastStateTime;\r\n                  // logger.log(`deglitch -> delay elapsed: ${elapsed} value_: ${value_} lastState: ${lastState} currentState: ${currentState} `);\r\n\r\n                  if (value_ !== lastState) {\r\n                    if (lastState === currentState) {\r\n                      // logger.log(`deglitch -> delay lastState === currentState -> empty()`);\r\n                      return empty();\r\n                    } else {\r\n                      // logger.log(`deglitch -> delay elapsed: ${elapsed} lastState !== currentState -> ${lastState}`);\r\n                      currentState = lastState;\r\n                      return of(currentState);\r\n                    }\r\n                  }\r\n                  // logger.log(`deglitch -> delay value_ !== lastState -> ${value_}`);\r\n                  if (elapsed < glitchSize) {\r\n                    // logger.log(`deglitch -> delay ${elapsed} < glitchSize -> empty()`);\r\n                    return empty();\r\n                  }\r\n                  currentState = value_;\r\n                  return of(currentState);\r\n                })\r\n              );\r\n            }\r\n          })\r\n        )\r\n        .subscribe(observer);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Remove spurious falses on a boolean observable.\r\n * @param glitchSize max size of the gitches (in miliseconds) to be removed.\r\n */\r\nexport function deglitchFalse(glitchSize: number) {\r\n  return (source: Observable<boolean>) => {\r\n    return new Observable(observer => {\r\n      let currentState: boolean;\r\n      let lastState: boolean;\r\n      let lastStateTime: number;\r\n\r\n      return source\r\n        .pipe(\r\n          flatMap((value: boolean) => {\r\n            // logger.log(`deglitchFalse: value: ${value} currentState: ${currentState} `);\r\n            lastStateTime = Date.now();\r\n            lastState = value;\r\n            if (currentState === undefined || (value === true && currentState !== value)) {\r\n              currentState = value;\r\n              return of(value);\r\n            }\r\n            if (value === currentState) {\r\n              return empty();\r\n            } else {\r\n              return of(value).pipe(\r\n                delay(glitchSize),\r\n                flatMap((value_: boolean) => {\r\n                  const elapsed = Date.now() - lastStateTime;\r\n                  // logger.log(`deglitchFalse -> delay elapsed: ${elapsed} value_: ${value_} lastState: ${lastState} currentState: ${currentState} `);\r\n\r\n                  if (value_ !== lastState) {\r\n                    if (lastState === currentState) {\r\n                      // logger.log(`deglitchFalse -> delay lastState === currentState -> empty()`);\r\n                      return empty();\r\n                    } else {\r\n                      // logger.log(`deglitchFalse -> delay elapsed: ${elapsed} lastState !== currentState -> ${lastState}`);\r\n                      currentState = lastState;\r\n                      return of(currentState);\r\n                    }\r\n                  }\r\n                  // logger.log(`deglitchFalse -> delay value_ !== lastState -> ${value_}`);\r\n                  if (elapsed < glitchSize) {\r\n                    // logger.log(`deglitchFalse -> delay ${elapsed} < glitchSize -> empty()`);\r\n                    return empty();\r\n                  }\r\n                  currentState = value_;\r\n                  return of(currentState);\r\n                })\r\n              );\r\n            }\r\n          })\r\n        )\r\n        .subscribe(observer);\r\n    });\r\n  };\r\n}\r\n\r\n","import {\r\n  Component,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  Output,\r\n  Input\r\n} from '@angular/core';\r\nimport {\r\n  Subscription,\r\n  BehaviorSubject,\r\n  Observable,\r\n  fromEvent,\r\n  Subject,\r\n  timer\r\n} from 'rxjs';\r\nimport {\r\n  filter,\r\n  tap,\r\n  map,\r\n  debounceTime,\r\n  pairwise,\r\n} from 'rxjs/operators';\r\nimport { LoggerService } from './logger.service';\r\nimport { IVirtualRepeat } from './virtual-repeat.base';\r\nimport { deglitchFalse } from './rxjs.operators';\r\n\r\nexport const SCROLL_STOP_TIME_THRESHOLD = 200; // in milliseconds\r\n\r\nconst INVALID_POSITION = -1;\r\n\r\n@Component({\r\n  selector: 'gc-virtual-repeat-container',\r\n  templateUrl: './virtual-repeat-container.html',\r\n  styleUrls: ['./virtual-repeat-container.scss']\r\n})\r\n// tslint:disable-next-line:component-class-suffix\r\nexport class VirtualRepeatContainer implements AfterViewInit, OnDestroy {\r\n  set virtualRepeat(virtualRepeat: IVirtualRepeat) {\r\n    this._virtualRepeat = virtualRepeat;\r\n  }\r\n\r\n  get currentScrollState(): SCROLL_STATE {\r\n    return this._currentScrollState;\r\n  }\r\n\r\n  set holderHeight(height: number) {\r\n    if (typeof height !== 'undefined') {\r\n      this._holderHeight = height;\r\n      if (this._holderHeight === 0) {\r\n        this.listContainer.nativeElement.scrollTop = 0;\r\n      }\r\n      // When initialization, the list-holder doesn't not have its height.\r\n      // So the scrollTop should be delayed for waiting\r\n      // the list-holder rendered bigger than the list-container.\r\n      if (\r\n        this._initialScrollTop !== INVALID_POSITION &&\r\n        this._holderHeight !== 0\r\n      ) {\r\n        setTimeout(() => {\r\n          this.listContainer.nativeElement.scrollTop = this._initialScrollTop;\r\n          this._initialScrollTop = INVALID_POSITION;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  get holderHeight(): number {\r\n    return this._holderHeight;\r\n  }\r\n\r\n  get holderHeightInPx(): string {\r\n    if (this._holderHeight) {\r\n      return this._holderHeight + 'px';\r\n    }\r\n    return '100%';\r\n  }\r\n\r\n  get translateYInPx(): string {\r\n    return this.translateY + 'px';\r\n  }\r\n\r\n  /**\r\n   * scroll state change\r\n   */\r\n  get scrollStateChange(): Observable<SCROLL_STATE> {\r\n    return this._scrollStateChange.asObservable();\r\n  }\r\n\r\n  /**\r\n   * current scroll position.\r\n   */\r\n  @Output()\r\n  get scrollPosition$(): Observable<number> {\r\n    return this._scrollPosition.asObservable();\r\n  }\r\n\r\n  /**\r\n   * container width and height.\r\n   */\r\n  get sizeChange(): Observable<[number, number]> {\r\n    return this._sizeChange.asObservable();\r\n  }\r\n\r\n  @Input() set rowHeight(height: string | number) {\r\n    if (height === 'auto') {\r\n      this._autoHeight = true;\r\n      this._autoHeightComputed = false;\r\n      return;\r\n    }\r\n    if (typeof height === 'string' || <any>height instanceof String) {\r\n      height = Number(height);\r\n    }\r\n    if (isNaN(height)) {\r\n      throw Error('rowHeight can not be NaN');\r\n    }\r\n    if (height !== undefined) {\r\n      this._rowHeight = height;\r\n      this._autoHeight = false;\r\n    }\r\n  }\r\n\r\n  set processing(l: boolean) {\r\n    this._processingSubject.next(l);\r\n  }\r\n\r\n  @Input()\r\n  set scrollPosition(p: number) {\r\n    // this.logger.log('p', p);\r\n    this.listContainer.nativeElement.scrollTop = p;\r\n    // if list-holder has no height at the certain time. scrollTop will not be set.\r\n    if (!this._holderHeight) {\r\n      this._initialScrollTop = p;\r\n    }\r\n    this._scrollPosition.next(p);\r\n  }\r\n\r\n  /**\r\n   * UITimelineMeter is optional injection. when this component used inside a UITimelineMeter.\r\n   * it is responsible to update the scrollY\r\n   * @param _timelineMeter\r\n   */\r\n  constructor(protected logger: LoggerService) {\r\n    this.scrollbarStyle = 'normal';\r\n    this.scrollbarWidth = getScrollBarWidth();\r\n  }\r\n  private _holderHeight = 0;\r\n  private _containerWidth = 0;\r\n  private _containerHeight = 0;\r\n  public translateY = 0;\r\n\r\n  private _subscription: Subscription = new Subscription();\r\n\r\n  private _scrollStateChange: BehaviorSubject<\r\n    SCROLL_STATE\r\n  > = new BehaviorSubject(SCROLL_STATE.IDLE);\r\n  private _scrollPosition: BehaviorSubject<number> = new BehaviorSubject(0);\r\n  private _sizeChange: BehaviorSubject<[number, number]> = new BehaviorSubject<\r\n    [number, number]\r\n  >([0, 0]);\r\n\r\n  private _ignoreScrollEvent = false;\r\n\r\n  private _initialScrollTop = INVALID_POSITION;\r\n\r\n  private _currentScrollState: SCROLL_STATE = SCROLL_STATE.IDLE;\r\n\r\n  @ViewChild('listContainer', {static: true} )  listContainer: ElementRef;\r\n\r\n  scrollbarStyle: string;\r\n  scrollbarWidth: number;\r\n\r\n  private _virtualRepeat: IVirtualRepeat;\r\n\r\n  private _rowHeight = 100;\r\n  _autoHeight = false;\r\n  _autoHeightComputed = false;\r\n  _autoHeightVariable = false;\r\n  _autoHeightVariableData: { itemsCount: number; totalHeight: number } = {\r\n    itemsCount: 0,\r\n    totalHeight: 0\r\n  };\r\n\r\n  private _processingSubject = new Subject<boolean>();\r\n  public processingRaw$ = this._processingSubject.pipe(\r\n    tap(state => {\r\n      this.logger.log('processingRaw$ ' + state);\r\n    })\r\n  );\r\n  public processing$ = this._processingSubject.pipe(\r\n    deglitchFalse(500),\r\n    tap(state => {\r\n      this.logger.log('processing$ ' + state);\r\n    })\r\n  );\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.scrollbarStyle === 'hide-scrollbar') {\r\n      this.listContainer.nativeElement.style.right =\r\n        0 - this.scrollbarWidth + 'px';\r\n      this.listContainer.nativeElement.style.paddingRight =\r\n        this.scrollbarWidth + 'px';\r\n    }\r\n\r\n    if (window) {\r\n      this._subscription.add(\r\n        fromEvent(window, 'resize').subscribe(() => {\r\n          this.resize();\r\n        })\r\n      );\r\n    }\r\n    this._subscription.add(\r\n      fromEvent(this.listContainer.nativeElement, 'scroll')\r\n        .pipe(\r\n          filter(() => {\r\n            if (this._ignoreScrollEvent) {\r\n              this._ignoreScrollEvent = false;\r\n              return false;\r\n            }\r\n            return true;\r\n          }),\r\n          map(() => {\r\n            return this.listContainer.nativeElement.scrollTop;\r\n          })\r\n        )\r\n        .subscribe((scrollY: number) => {\r\n          this._scrollPosition.next(scrollY);\r\n        })\r\n    );\r\n\r\n    this._subscription.add(\r\n      this.scrollPosition$\r\n        .pipe(\r\n          tap(() => {\r\n            if (this._currentScrollState === SCROLL_STATE.IDLE) {\r\n              this._currentScrollState = SCROLL_STATE.SCROLLING_DOWN;\r\n              this._scrollStateChange.next(this._currentScrollState);\r\n            }\r\n          }),\r\n          pairwise(),\r\n          map(pair => {\r\n            if (Math.abs(pair[1] - pair[0]) > 10) {\r\n              this._currentScrollState =\r\n                pair[1] - pair[0] > 0\r\n                  ? SCROLL_STATE.SCROLLING_DOWN\r\n                  : SCROLL_STATE.SCROLLING_UP;\r\n              this.logger.log(\r\n                `scrollPosition pair: ${pair} _currentScrollState: ${\r\n                  this._currentScrollState\r\n                }`\r\n              );\r\n              this._scrollStateChange.next(this._currentScrollState);\r\n            }\r\n          }),\r\n          debounceTime(SCROLL_STOP_TIME_THRESHOLD)\r\n        )\r\n        .subscribe(() => {\r\n          if (this._currentScrollState !== SCROLL_STATE.IDLE) {\r\n            this._scrollStateChange.next(SCROLL_STATE.IDLE);\r\n          }\r\n        })\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.resize();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  getRowHeight(): number {\r\n    return this._rowHeight;\r\n  }\r\n\r\n  getContainerSize(): { width: number; height: number } {\r\n    if (this.listContainer && this.listContainer.nativeElement) {\r\n      const rect = this.listContainer.nativeElement.getBoundingClientRect();\r\n      this._containerWidth = rect.width - this.scrollbarWidth;\r\n      this._containerHeight = rect.height;\r\n      return { width: this._containerWidth, height: this._containerHeight };\r\n    }\r\n    return { width: 0, height: 0 };\r\n  }\r\n\r\n  reset() {\r\n    this.scrollPosition = 0;\r\n    this._virtualRepeat.reset();\r\n  }\r\n\r\n  resize() {\r\n    const { width, height } = this.getContainerSize();\r\n    this._sizeChange.next([width, height]);\r\n  }\r\n}\r\n\r\nexport enum SCROLL_STATE {\r\n  IDLE,\r\n  SCROLLING_DOWN,\r\n  SCROLLING_UP\r\n}\r\n\r\nexport function getScrollBarWidth() {\r\n  const inner = document.createElement('p');\r\n  inner.style.width = '100%';\r\n  inner.style.height = '200px';\r\n\r\n  const outer = document.createElement('div');\r\n  outer.style.position = 'absolute';\r\n  outer.style.top = '0px';\r\n  outer.style.left = '0px';\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.width = '200px';\r\n  outer.style.height = '150px';\r\n  outer.style.overflow = 'hidden';\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n  const w1 = inner.offsetWidth;\r\n  outer.style.overflow = 'scroll';\r\n  let w2 = inner.offsetWidth;\r\n\r\n  if (w1 === w2) {\r\n    w2 = outer.clientWidth;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return w1 - w2;\r\n}\r\n","<div class=\"gc-virtual-repeat-scroller\" #listContainer [ngClass]=\"scrollbarStyle\">\r\n    <div class=\"gc-virtual-repeat-container-holder\" [style.height]=\"holderHeightInPx\">\r\n    </div>\r\n    <div class=\"gc-virtual-repeat-offsetter\" role=\"presentation\" [style.transform]=\"'translateY('+ translateYInPx +')'\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>","import {\r\n  EmbeddedViewRef,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n  ViewRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  Directive\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport { filter, debounceTime, tap, throttleTime, map } from 'rxjs/operators';\r\nimport {\r\n  VirtualRepeatContainer,\r\n  SCROLL_STATE\r\n} from './virtual-repeat-container';\r\nimport { LoggerService } from './logger.service';\r\n\r\nexport class Deferred<T> {\r\n  public promise: Promise<T>;\r\n  public resolve: (value: T) => void;\r\n  public reject: (value: T) => void;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nexport class VirtualRepeatRow {\r\n  constructor(\r\n    public $implicit: any,\r\n    public index: number,\r\n    public count: number\r\n  ) { }\r\n\r\n  get first(): boolean {\r\n    return this.index === 0;\r\n  }\r\n\r\n  get last(): boolean {\r\n    return this.index === this.count - 1;\r\n  }\r\n\r\n  get even(): boolean {\r\n    return this.index % 2 === 0;\r\n  }\r\n\r\n  get odd(): boolean {\r\n    return !this.even;\r\n  }\r\n\r\n  previousDisplay: string;\r\n  markedToBeRemoved: boolean;\r\n  recycled: boolean;\r\n}\r\n\r\nexport class Recycler {\r\n  private _limit = 0;\r\n  private _scrapViews: ViewRef[] = [];\r\n\r\n  constructor(limit: number = 0) {\r\n    this._limit = limit;\r\n  }\r\n\r\n  length() {\r\n    return this._scrapViews.length;\r\n  }\r\n\r\n  recoverView(): EmbeddedViewRef<VirtualRepeatRow> {\r\n    return this._scrapViews.pop() as EmbeddedViewRef<VirtualRepeatRow>;\r\n  }\r\n\r\n  recycleView(view: ViewRef) {\r\n    view.detach();\r\n    this._scrapViews.push(view);\r\n  }\r\n\r\n  /**\r\n   * scrap view count should not exceed the number of current attached views.\r\n   */\r\n  pruneScrapViews() {\r\n    if (this._limit <= 1) {\r\n      return;\r\n    }\r\n    while (this._scrapViews.length > this._limit) {\r\n      this._scrapViews.pop().destroy();\r\n    }\r\n  }\r\n\r\n  setScrapViewsLimit(limit: number) {\r\n    this._limit = limit;\r\n    this.pruneScrapViews();\r\n  }\r\n\r\n  clean() {\r\n    this._scrapViews.forEach((view: ViewRef) => {\r\n      view.destroy();\r\n    });\r\n    this._scrapViews = [];\r\n  }\r\n}\r\n\r\nexport interface IVirtualRepeat {\r\n  reset(): void;\r\n}\r\n\r\n@Directive({\r\n})\r\nexport abstract class VirtualRepeatBase<T>\r\n  implements IVirtualRepeat, OnInit, OnDestroy {\r\n  protected _differ: IterableDiffer<T>;\r\n  protected _trackByFn: TrackByFunction<T>;\r\n  protected _subscription: Subscription = new Subscription();\r\n  /**\r\n   * scroll offset of y-axis in pixel\r\n   */\r\n  protected _scrollY = 0;\r\n  /**\r\n   * current first item index in collection\r\n   */\r\n  protected _firstItemIndex: number;\r\n  /**\r\n   * current last item index in collection\r\n   */\r\n  protected _lastItemIndex: number;\r\n  /**\r\n   * first requested item index in collection\r\n   */\r\n  protected _firstRequestedItemIndex: number;\r\n  /**\r\n   * last requested item index in collection\r\n   */\r\n  protected _lastRequestedItemIndex: number;\r\n  /**\r\n   * items inserted after and before the view area\r\n   */\r\n  protected _guardItems = 10;\r\n\r\n  protected _containerWidth: number;\r\n  protected _containerHeight: number;\r\n\r\n  protected _isInLayout = false;\r\n\r\n  protected _isInMeasure = false;\r\n\r\n  protected _pendingMeasurement: any;\r\n\r\n  protected _collectionLength = -1;\r\n\r\n  protected _recycler: Recycler;\r\n\r\n  protected _markedToBeRemovedCount: number;\r\n\r\n  protected _fullScroll: boolean;\r\n  protected _processTimeout = 5000;\r\n  protected _doProcessTimeout: any;\r\n\r\n  public requestMeasure: Subject<void> = new Subject();\r\n  protected _requestMeasureFiltered: Observable<any> = this.requestMeasure.pipe(\r\n    tap(() => {\r\n      this.logger.log('requestMeasureFiltered: requested');\r\n    }),\r\n    debounceTime(60),\r\n    filter(() => {\r\n      this.logger.log(\r\n        `requestMeasureFiltered: enter isInMeasure: ` +\r\n        `${this._isInMeasure} isInLayout: ${this._isInLayout}`\r\n      );\r\n      if (this._isInMeasure || this._isInLayout) {\r\n        this.logger.log('requestMeasureFiltered: retrying...');\r\n        setTimeout(() => {\r\n          this.requestMeasure.next();\r\n        }, 500);\r\n      }\r\n      return !this._isInMeasure && !this._isInLayout;\r\n    })\r\n  );\r\n\r\n  public requestLayout: Subject<void> = new Subject();\r\n  protected _requestLayoutFiltered: Observable<any> = this.requestLayout.pipe(\r\n    tap(() => {\r\n      this.logger.log('requestLayoutFiltered: requested');\r\n    }),\r\n    filter(() => {\r\n      this.logger.log(\r\n        `requestLayoutFiltered: enter isInMeasure: ${\r\n        this._isInMeasure\r\n        } isInLayout: ${this._isInLayout}`\r\n      );\r\n      if (this._isInMeasure || this._isInLayout) {\r\n        this.logger.log('requestLayoutFiltered: retrying...');\r\n        setTimeout(() => {\r\n          this.requestLayout.next();\r\n        }, 500);\r\n      }\r\n      return !this._isInMeasure && !this._isInLayout;\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    protected _virtualRepeatContainer: VirtualRepeatContainer,\r\n    protected _differs: IterableDiffers,\r\n    protected _template: TemplateRef<VirtualRepeatRow>,\r\n    protected _viewContainerRef: ViewContainerRef,\r\n    protected logger: LoggerService\r\n  ) {\r\n    this._virtualRepeatContainer.virtualRepeat = this;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.connect();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disconnect();\r\n  }\r\n\r\n  protected connect() {\r\n    this._firstRequestedItemIndex = this._lastRequestedItemIndex = undefined;\r\n    this._virtualRepeatContainer._autoHeightComputed = false;\r\n    this._recycler = new Recycler();\r\n    this.requestMeasure.next();\r\n\r\n    this._subscription.add(\r\n      this._requestMeasureFiltered.subscribe(() => {\r\n        this.measure();\r\n      })\r\n    );\r\n\r\n    this._subscription.add(\r\n      this._requestLayoutFiltered.subscribe(() => {\r\n        this.layout();\r\n      })\r\n    );\r\n\r\n    this._subscription.add(\r\n      this._virtualRepeatContainer.scrollPosition$\r\n        .pipe(\r\n          debounceTime(60),\r\n          filter(scrollY => {\r\n            return (\r\n              scrollY === 0 ||\r\n              Math.abs(scrollY - this._scrollY) >=\r\n              (this._virtualRepeatContainer.getRowHeight() * this._guardItems) / 2\r\n            );\r\n          })\r\n        )\r\n        .subscribe(scrollY => {\r\n          this.logger.log('scrollPosition: ', scrollY);\r\n          this._scrollY = scrollY;\r\n          if (scrollY >= 0 && this._collectionLength !== -1) {\r\n            this.requestLayout.next();\r\n          }\r\n        })\r\n    );\r\n\r\n    this._subscription.add(\r\n      this._virtualRepeatContainer.sizeChange.subscribe(([width, height]) => {\r\n        this.logger.log('sizeChange: ', width, height);\r\n        this._containerWidth = width;\r\n        this._containerHeight = height;\r\n        if (height > 0) {\r\n          this.requestMeasure.next();\r\n        }\r\n      })\r\n    );\r\n\r\n    this._subscription.add(\r\n      this._virtualRepeatContainer.processingRaw$.subscribe(processing =>\r\n        this.onProcessing(processing)\r\n      )\r\n    );\r\n  }\r\n\r\n  protected disconnect() {\r\n    this._subscription.unsubscribe();\r\n    this._recycler.clean();\r\n  }\r\n\r\n  public reset() {\r\n    this._virtualRepeatContainer.scrollPosition = 0;\r\n    this._collectionLength = -1;\r\n    this.detachAllViews();\r\n    this.requestMeasure.next();\r\n  }\r\n\r\n  protected abstract createView(\r\n    index: number,\r\n    addBefore: boolean\r\n  ): Promise<ViewRef>;\r\n\r\n  protected abstract measure(): void;\r\n\r\n  protected detachAllViews() {\r\n    this._viewContainerRef.clear();\r\n    this._isInLayout = false;\r\n    return;\r\n  }\r\n\r\n  protected emptyItem(item: any) {\r\n    const o = Array.isArray(item) ? [] : {};\r\n    for (const key in item) {\r\n      if (item.hasOwnProperty(key)) {\r\n        const t = typeof item[key];\r\n        o[key] = t === 'object' ? this.emptyItem(item[key]) : undefined;\r\n      }\r\n    }\r\n    return o;\r\n  }\r\n\r\n  protected layout() {\r\n    this.logger.log('layout: on layout');\r\n    this._virtualRepeatContainer.processing = true;\r\n    this._isInLayout = true;\r\n\r\n    const { width, height } = this._virtualRepeatContainer.getContainerSize();\r\n    this._containerWidth = width;\r\n    this._containerHeight = height;\r\n\r\n    if (this._collectionLength <= 0) {\r\n      this.logger.log('layout: this._isInLayout = false. detachAllViews');\r\n      this.detachAllViews();\r\n      this.processingDone();\r\n      return;\r\n    }\r\n    this.findRequestedIndexesRange();\r\n    this.removeViews();\r\n    this.createViews().then(() => {\r\n      clearTimeout(this._doProcessTimeout);\r\n      this.processingDone();\r\n    });\r\n    this._doProcessTimeout = setTimeout(() => {\r\n      this.processingDone();\r\n    }, this._processTimeout);\r\n  }\r\n\r\n  private processingDone() {\r\n    this._virtualRepeatContainer.processing = false;\r\n    this._isInLayout = false;\r\n    this._recycler.pruneScrapViews();\r\n  }\r\n\r\n  protected findRequestedIndexesRange() {\r\n    let firstPosition;\r\n\r\n    this._firstItemIndex = this._firstRequestedItemIndex;\r\n    this._lastItemIndex = this._lastRequestedItemIndex;\r\n    this.logger.log(\r\n      `findRequestedIndexesRange: _autoHeightVariable: ${\r\n      this._virtualRepeatContainer._autoHeightVariable\r\n      } firstItemPosition: ${this._firstItemIndex}`\r\n    );\r\n\r\n    if (this._virtualRepeatContainer._autoHeightVariable) {\r\n      this._virtualRepeatContainer.holderHeight =\r\n        this._virtualRepeatContainer.getRowHeight() * this._collectionLength;\r\n\r\n      firstPosition = Math.floor(\r\n        this._collectionLength *\r\n        (this._scrollY / this._virtualRepeatContainer.holderHeight)\r\n      );\r\n      let lastPosition =\r\n        Math.ceil(\r\n          this._containerHeight / this._virtualRepeatContainer.getRowHeight()\r\n        ) + firstPosition;\r\n      this._firstRequestedItemIndex = Math.max(\r\n        firstPosition - this._guardItems,\r\n        0\r\n      );\r\n      this._lastRequestedItemIndex = Math.min(\r\n        lastPosition + this._guardItems,\r\n        this._collectionLength - 1\r\n      );\r\n      this.logger.log(\r\n        `findRequestedIndexesRange: _autoHeightVariable scrollY: \r\n        ${this._scrollY} holderHeight: ${this._virtualRepeatContainer.holderHeight}`\r\n      );\r\n      this.logger.log(\r\n        `findRequestedIndexesRange: _autoHeightVariable firstRequestedItemPosition: ${\r\n        this._firstRequestedItemIndex\r\n        } lastRequestedItemPosition: ${this._lastRequestedItemIndex}`\r\n      );\r\n    } else {\r\n      firstPosition = Math.floor(\r\n        this._scrollY / this._virtualRepeatContainer.getRowHeight()\r\n      );\r\n      const firstPositionOffset =\r\n        this._scrollY - firstPosition * this._virtualRepeatContainer.getRowHeight();\r\n      let lastPosition =\r\n        Math.ceil(\r\n          (this._containerHeight + firstPositionOffset) /\r\n          this._virtualRepeatContainer.getRowHeight()\r\n        ) + firstPosition;\r\n      this._firstRequestedItemIndex = Math.max(\r\n        firstPosition - this._guardItems,\r\n        0\r\n      );\r\n      this._lastRequestedItemIndex = Math.min(\r\n        lastPosition + this._guardItems,\r\n        this._collectionLength - 1\r\n      );\r\n      if (this._lastRequestedItemIndex - this._firstRequestedItemIndex > 50) {\r\n        this._lastRequestedItemIndex = this._firstRequestedItemIndex + 50;\r\n      }\r\n\r\n      this._virtualRepeatContainer.translateY =\r\n        this._firstRequestedItemIndex * this._virtualRepeatContainer.getRowHeight();\r\n      this.logger.log(\r\n        `findRequestedIndexesRange: translateY: ${\r\n        this._virtualRepeatContainer.translateY\r\n        } rowHeight: ${this._virtualRepeatContainer.getRowHeight()}`\r\n      );\r\n      this.logger.log(\r\n        `findRequestedIndexesRange: firstRequestedItemPosition: ${\r\n        this._firstRequestedItemIndex\r\n        } lastRequestedItemPosition: ${this._lastRequestedItemIndex}`\r\n      );\r\n    }\r\n  }\r\n\r\n  protected removeViews() {\r\n    this._markedToBeRemovedCount = 0;\r\n    if (this._viewContainerRef.length > 0) {\r\n      this.logger.log('removeViews: length > 0');\r\n      for (let i = 0; i < this._viewContainerRef.length; i++) {\r\n        const view = <EmbeddedViewRef<VirtualRepeatRow>>(\r\n          this._viewContainerRef.get(i)\r\n        );\r\n        const viewIndex = view.context.index;\r\n        if (\r\n          viewIndex > this._lastRequestedItemIndex ||\r\n          viewIndex < this._firstRequestedItemIndex\r\n        ) {\r\n          if (this._virtualRepeatContainer._autoHeightVariable) {\r\n            const viewElement: HTMLElement = view.rootNodes[0];\r\n            view.context.markedToBeRemoved = true;\r\n            this._markedToBeRemovedCount++;\r\n            this.logger.log(\r\n              'removeViews: _autoHeightVariable markedToBeRemoved',\r\n              viewIndex\r\n            );\r\n          } else {\r\n            this.logger.log('removeViews: recycleView ', viewIndex);\r\n            this._recycler.recycleView(view);\r\n            this._viewContainerRef.detach(i);\r\n            i--;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.logger.log('removeViews: recycler length', this._recycler.length());\r\n    }\r\n  }\r\n\r\n  protected createViews(): Promise<ViewRef[]> {\r\n    const promises = [];\r\n    if (\r\n      this._viewContainerRef.length > 0 &&\r\n      this._markedToBeRemovedCount < this._viewContainerRef.length\r\n    ) {\r\n      this._fullScroll = false;\r\n      this.logger.log(\r\n        `createViews: length > 0, _firstItemPosition: ${\r\n        this._firstItemIndex\r\n        } _lastItemPosition: ${this._lastItemIndex}`\r\n      );\r\n      this.logger.log(\r\n        `createViews: length > 0, _firstRequestedItemPosition: ${\r\n        this._firstRequestedItemIndex\r\n        } _lastRequestedItemPosition: ${this._lastRequestedItemIndex}`\r\n      );\r\n      for (\r\n        let i = this._firstItemIndex - 1;\r\n        i >= this._firstRequestedItemIndex;\r\n        i--\r\n      ) {\r\n        this.logger.log('createViews: getView -- ', i);\r\n        promises.push(this.createView(i, true));\r\n      }\r\n      for (\r\n        let i = this._lastItemIndex + 1;\r\n        i <= this._lastRequestedItemIndex;\r\n        i++\r\n      ) {\r\n        this.logger.log('createViews: getView  ++ ', i);\r\n        promises.push(this.createView(i, false));\r\n      }\r\n    } else {\r\n      this.logger.log('createViews: length == 0');\r\n      this._fullScroll = true;\r\n      for (\r\n        let i = this._firstRequestedItemIndex;\r\n        i <= this._lastRequestedItemIndex;\r\n        i++\r\n      ) {\r\n        promises.push(this.createView(i, false));\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  protected prepareView(index: number, item: T) {\r\n    let view;\r\n    if ((view = this._recycler.recoverView())) {\r\n      view.context.$implicit = item;\r\n      view.context.index = index;\r\n      view.context.count = this._collectionLength;\r\n      view.context.recycled = true;\r\n      view.reattach();\r\n    } else {\r\n      view = this._template.createEmbeddedView(\r\n        new VirtualRepeatRow(item, index, this._collectionLength)\r\n      );\r\n      view.context.recycled = false;\r\n    }\r\n    return view;\r\n  }\r\n\r\n  protected createViewForItem(index: number, item: T): ViewRef {\r\n    this.logger.log(\r\n      `createViewForItem: _firstItemPosition: ${\r\n      this._firstItemIndex\r\n      } _firstRequestedItemPosition: ${this._firstRequestedItemIndex} length: ${\r\n      this._viewContainerRef.length\r\n      }`\r\n    );\r\n    let containerPos = index - (this._firstItemIndex || 0);\r\n    if (Math.abs(containerPos) > this._guardItems) {\r\n      containerPos = 0; // out of previous range\r\n    }\r\n    this.logger.log(\r\n      `createViewForItem: create containerPos: ${containerPos} index: ${index}`\r\n    );\r\n    let view: ViewRef = null;\r\n    if (this._viewContainerRef.length === 0) {\r\n      view = this.prepareView(index, item);\r\n      this._viewContainerRef.insert(view);\r\n    } else {\r\n      let inserted = false;\r\n      if (containerPos >= 0) {\r\n        // insert at the end\r\n        for (\r\n          let containerIndex = this._viewContainerRef.length - 1;\r\n          containerIndex >= 0;\r\n          containerIndex--\r\n        ) {\r\n          const viewIndex = (<EmbeddedViewRef<VirtualRepeatRow>>(\r\n            this._viewContainerRef.get(containerIndex)\r\n          )).context.index;\r\n          // this.logger.log(`createViewForItem: checking ${viewIndex} ++`);\r\n          if (index === viewIndex) {\r\n            this.logger.log(`createViewForItem: reasign ${viewIndex} ++`);\r\n            view = this._viewContainerRef.get(containerIndex);\r\n            (<EmbeddedViewRef<VirtualRepeatRow>>view).context.$implicit = item;\r\n            view.reattach();\r\n            inserted = true;\r\n            break;\r\n          } else if (index > viewIndex) {\r\n            view = this.prepareView(index, item);\r\n            this.logger.log(\r\n              `createViewForItem: inserting in ${containerIndex + 1} ++`\r\n            );\r\n            this._viewContainerRef.insert(view, containerIndex + 1);\r\n            inserted = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!inserted) {\r\n          view = this.prepareView(index, item);\r\n          this.logger.log(`createViewForItem: inserting in first +++`);\r\n          this._viewContainerRef.insert(view, 0);\r\n        }\r\n      } else {\r\n        // insert at the beginning\r\n        for (\r\n          let containerIndex = 0;\r\n          containerIndex < this._viewContainerRef.length;\r\n          containerIndex++\r\n        ) {\r\n          const viewIndex = (<EmbeddedViewRef<VirtualRepeatRow>>(\r\n            this._viewContainerRef.get(containerIndex)\r\n          )).context.index;\r\n          // this.logger.log(`createViewForItem: checking ${viewIndex} --`);\r\n          if (index === viewIndex) {\r\n            this.logger.log(\r\n              `createViewForItem: reasign ${index} at ${containerIndex} --`,\r\n              item\r\n            );\r\n            view = this._viewContainerRef.get(containerIndex);\r\n            (<EmbeddedViewRef<VirtualRepeatRow>>view).context.$implicit = item;\r\n            view.reattach();\r\n            inserted = true;\r\n            break;\r\n          } else if (index < viewIndex) {\r\n            view = this.prepareView(index, item);\r\n            this.logger.log(\r\n              `createViewForItem: inserting in ${containerIndex} --`\r\n            );\r\n            this._viewContainerRef.insert(view, containerIndex);\r\n            inserted = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!inserted) {\r\n          view = this.prepareView(index, item);\r\n          this.logger.log(`createViewForItem: inserting in last ---`);\r\n          this._viewContainerRef.insert(view);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (view) {\r\n      this.applyStyles(index, view as EmbeddedViewRef<VirtualRepeatRow>);\r\n    }\r\n\r\n    return view;\r\n  }\r\n\r\n  protected applyStyles(\r\n    index: number,\r\n    view: EmbeddedViewRef<VirtualRepeatRow>\r\n  ) {\r\n    const viewContent = view.rootNodes[0];\r\n    if (!this._virtualRepeatContainer._autoHeight) {\r\n      viewContent.style.height = `${this._virtualRepeatContainer.getRowHeight()}px`;\r\n    } else {\r\n      viewContent.style.height = undefined;\r\n    }\r\n    viewContent.style.boxSizing = 'border-box';\r\n\r\n    if (this._virtualRepeatContainer._autoHeightVariable) {\r\n      view.context.previousDisplay = viewContent.style.display;\r\n      viewContent.style.display = 'none'; // will be shown when processing finished\r\n      this.logger.log(\r\n        `applyStyles: _autoHeightVariable creaded view on ${index} recycled: ${\r\n        view.context.recycled\r\n        }`\r\n      );\r\n    }\r\n  }\r\n\r\n  onProcessing(processing: boolean): any {\r\n    if (processing === false) {\r\n      // processing finished\r\n      this.logger.log('onProcessing: finished. Dispatching layout');\r\n      window.requestAnimationFrame(() => {\r\n        this.logger.log('onProcessing: inside');\r\n        this.dispatchLayout();\r\n        this.logger.log(\r\n          'onProcessing: layout done rowHeight',\r\n          this._virtualRepeatContainer.getRowHeight()\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  private dispatchLayout() {\r\n    let totalHeight = 0;\r\n    let totalRemovedHeight = 0;\r\n    let totalAddedHeight = 0;\r\n    let guardHeight = 0;\r\n    let meanHeight = 0;\r\n\r\n    if (this._viewContainerRef.length === 0) { return; }\r\n\r\n    if (this._virtualRepeatContainer._autoHeight) {\r\n      if (this._virtualRepeatContainer._autoHeightVariable) {\r\n        this.logger.log(\r\n          `dispatchLayout: _autoHeightVariable enter ${\r\n          this._viewContainerRef.length\r\n          }`\r\n        );\r\n        // show / recycle views in _autoHeightVariable mode\r\n        for (\r\n          let containerIndex = 0;\r\n          containerIndex < this._viewContainerRef.length;\r\n          containerIndex++\r\n        ) {\r\n          const view = <EmbeddedViewRef<VirtualRepeatRow>>(\r\n            this._viewContainerRef.get(containerIndex)\r\n          );\r\n          const viewElement: HTMLElement = view.rootNodes[0];\r\n          if (view.context.previousDisplay !== undefined) {\r\n            viewElement.style.display = view.context.previousDisplay;\r\n            this.logger.log(\r\n              `dispatchLayout: _autoHeightVariable showing ${\r\n              view.context.index\r\n              }`\r\n            );\r\n          }\r\n          if (view.context.markedToBeRemoved) {\r\n            totalRemovedHeight += this.getElementHeight(viewElement);\r\n            this._recycler.recycleView(view);\r\n            this._viewContainerRef.detach(containerIndex);\r\n            this.logger.log(\r\n              `dispatchLayout: _autoHeightVariable removing ${\r\n              view.context.index\r\n              } recycler lenght: ${this._recycler.length()}`\r\n            );\r\n            containerIndex--;\r\n            delete view.context.markedToBeRemoved;\r\n          }\r\n        }\r\n      }\r\n\r\n      // compute meanHeight\r\n      for (\r\n        let containerIndex = 0;\r\n        containerIndex < this._viewContainerRef.length;\r\n        containerIndex++\r\n      ) {\r\n        const view = this._viewContainerRef.get(\r\n          containerIndex\r\n        ) as EmbeddedViewRef<VirtualRepeatRow>;\r\n        const viewElement: HTMLElement = view.rootNodes[0];\r\n\r\n        const height = this.getElementHeight(viewElement);\r\n        this.logger.log(\r\n          `dispatchLayout: index: ${containerIndex} height: ${height}`\r\n        );\r\n        totalHeight += height;\r\n        if (containerIndex < this._guardItems) {\r\n          guardHeight += height;\r\n        }\r\n\r\n        if (this._virtualRepeatContainer._autoHeightVariable) {\r\n          if (view.context.previousDisplay !== undefined) {\r\n            this.logger.log(\r\n              `dispatchLayout: totalAddedHeight: ${totalAddedHeight}`\r\n            );\r\n            totalAddedHeight += height;\r\n            if (\r\n              this._virtualRepeatContainer._autoHeightVariableData.itemsCount <\r\n              this._collectionLength\r\n            ) {\r\n              this._virtualRepeatContainer._autoHeightVariableData.totalHeight += height;\r\n              this._virtualRepeatContainer._autoHeightVariableData.itemsCount++;\r\n            }\r\n            delete view.context.previousDisplay;\r\n          }\r\n        }\r\n      }\r\n      meanHeight = totalHeight / this._viewContainerRef.length;\r\n\r\n      if (!this._virtualRepeatContainer._autoHeightComputed) {\r\n        this._virtualRepeatContainer.rowHeight = meanHeight;\r\n        this.logger.log(\r\n          'dispatchLayout: autoHeight rowHeight updated ' + meanHeight\r\n        );\r\n        this._virtualRepeatContainer._autoHeightComputed = true;\r\n        this.requestMeasure.next();\r\n      } else if (meanHeight !== this._virtualRepeatContainer.getRowHeight()) {\r\n        this._virtualRepeatContainer._autoHeightVariable = true;\r\n        this.logger.log(\r\n          'dispatchLayout: autoHeightVariable rowHeight updated ' +\r\n          this._virtualRepeatContainer.getRowHeight()\r\n        );\r\n      }\r\n\r\n      if (this._virtualRepeatContainer._autoHeightVariable) {\r\n        if (\r\n          this._virtualRepeatContainer._autoHeightVariableData.itemsCount === 0\r\n        ) {\r\n          // first page\r\n          this._virtualRepeatContainer._autoHeightVariableData.totalHeight = totalHeight;\r\n          this._virtualRepeatContainer._autoHeightVariableData.itemsCount = this._viewContainerRef.length;\r\n        }\r\n        this._virtualRepeatContainer.rowHeight =\r\n          this._virtualRepeatContainer._autoHeightVariableData.totalHeight /\r\n          this._virtualRepeatContainer._autoHeightVariableData.itemsCount;\r\n\r\n        if (this._fullScroll) {\r\n          this._virtualRepeatContainer.translateY = this._scrollY - guardHeight;\r\n        } else {\r\n          // partial scroll\r\n          this.logger.log(`dispatchLayout: _autoHeightVariable partial scroll`);\r\n          let translateY =\r\n            this._virtualRepeatContainer.translateY +\r\n            (this._virtualRepeatContainer.currentScrollState ===\r\n              SCROLL_STATE.SCROLLING_DOWN\r\n              ? totalRemovedHeight\r\n              : -totalAddedHeight);\r\n          // check out of scroll\r\n          const offset = this._scrollY - translateY;\r\n          if (offset > guardHeight * 1.5 || offset < guardHeight * 0.5) {\r\n            translateY = this._scrollY - guardHeight;\r\n            this.logger.log(\r\n              `dispatchLayout: _autoHeightVariable out of scroll adjusted`\r\n            );\r\n          }\r\n          this._virtualRepeatContainer.translateY = translateY;\r\n        }\r\n\r\n        if (this._scrollY === 0) {\r\n          // adjust on limits\r\n          this._virtualRepeatContainer.translateY = 0;\r\n        }\r\n\r\n        this.logger.log(`dispatchLayout: _autoHeightVariable rowHeight: ${this._virtualRepeatContainer.getRowHeight()}\r\n                         scrollY: ${this._scrollY} scrollState: ${this._virtualRepeatContainer.currentScrollState}\r\n                         totalRemovedHeight: ${totalRemovedHeight} totalAddedHeight: ${totalAddedHeight}\r\n                         translateY: ${this._virtualRepeatContainer.translateY}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getElementHeight(viewElement: HTMLElement) {\r\n    return viewElement.offsetHeight || viewElement.children['0'].clientHeight;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  DoCheck,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  isDevMode,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffers,\r\n  NgIterable,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n  ViewRef\r\n} from '@angular/core';\r\n\r\nimport { VirtualRepeatBase, VirtualRepeatRow } from './virtual-repeat.base';\r\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\r\nimport { LoggerService } from './logger.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[virtualRepeat]'\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class VirtualRepeat<T> extends VirtualRepeatBase<T>\r\n  implements OnChanges, DoCheck, OnInit, OnDestroy {\r\n  private _collection: any[];\r\n\r\n  @Input() virtualRepeatOf: NgIterable<T>;\r\n\r\n  @Input()\r\n  set virtualRepeatForTrackBy(fn: TrackByFunction<T>) {\r\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n      if (<any>console && <any>console.warn) {\r\n        console.warn(\r\n          `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation. ` +\r\n            ` for more information.`\r\n        );\r\n      }\r\n    }\r\n    this._trackByFn = fn;\r\n  }\r\n\r\n  get virtualRepeatForTrackBy(): TrackByFunction<T> {\r\n    return this._trackByFn;\r\n  }\r\n\r\n  @Input()\r\n  set virtualRepeatForTemplate(value: TemplateRef<VirtualRepeatRow>) {\r\n    if (value) {\r\n      this._template = value;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    _virtualRepeatContainer: VirtualRepeatContainer,\r\n    _differs: IterableDiffers,\r\n    _template: TemplateRef<VirtualRepeatRow>,\r\n    _viewContainerRef: ViewContainerRef,\r\n    logger: LoggerService\r\n  ) {\r\n    super(\r\n      _virtualRepeatContainer,\r\n      _differs,\r\n      _template,\r\n      _viewContainerRef,\r\n      logger\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('virtualRepeatOf' in changes) {\r\n      this.detachAllViews();\r\n\r\n      // React on virtualRepeatOf only once all inputs have been initialized\r\n      const value = changes['virtualRepeatOf'].currentValue;\r\n      if (this._collection === undefined) {\r\n        this._collection = value;\r\n        this.requestMeasure.next();\r\n      } else if (!this._differ && value) {\r\n        try {\r\n          this._differ = this._differs.find(value).create(this._trackByFn);\r\n        } catch (e) {\r\n          throw new Error(`Cannot find a differ supporting object '${value}'\r\n                    of type '${getTypeNameForDebugging(\r\n                      value\r\n                    )}'. NgFor only supports binding to Iterables such as Arrays.`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this._differ) {\r\n      const changes = this._differ.diff(this.virtualRepeatOf);\r\n      if (changes) {\r\n        this.applyChanges(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyChanges(changes: IterableChanges<T>) {\r\n    if (!this._collection) {\r\n      this._collection = [];\r\n    }\r\n    let isMeasurementRequired = false;\r\n\r\n    changes.forEachOperation(\r\n      (\r\n        item: IterableChangeRecord<any>,\r\n        adjustedPreviousIndex: number,\r\n        currentIndex: number\r\n      ) => {\r\n        if (item.previousIndex == null) {\r\n          // new item\r\n          // this.logger.log('new item', item, adjustedPreviousIndex, currentIndex);\r\n          isMeasurementRequired = true;\r\n          this._collection.splice(currentIndex, 0, item.item);\r\n        } else if (currentIndex == null) {\r\n          // remove item\r\n          this.logger.log(\r\n            'remove item',\r\n            item,\r\n            adjustedPreviousIndex,\r\n            currentIndex\r\n          );\r\n          isMeasurementRequired = true;\r\n          this._collection.splice(adjustedPreviousIndex, 1);\r\n        } else {\r\n          // move item\r\n          this.logger.log(\r\n            'move item',\r\n            item,\r\n            adjustedPreviousIndex,\r\n            currentIndex\r\n          );\r\n          this._collection.splice(\r\n            currentIndex,\r\n            0,\r\n            this._collection.splice(adjustedPreviousIndex, 1)[0]\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    changes.forEachIdentityChange((record: any) => {\r\n      this._collection[record.currentIndex] = record.item;\r\n    });\r\n\r\n    if (isMeasurementRequired) {\r\n      this.requestMeasure.next();\r\n    } else {\r\n      this.requestLayout.next();\r\n    }\r\n  }\r\n\r\n  protected measure() {\r\n    this.logger.log('measure: enter');\r\n    this._collectionLength =\r\n      !this._collection || this._collection.length === 0\r\n        ? 0\r\n        : this._collection.length;\r\n    this._isInMeasure = true;\r\n    this._virtualRepeatContainer.holderHeight =\r\n      this._virtualRepeatContainer.getRowHeight() * this._collectionLength;\r\n    this._isInMeasure = false;\r\n    this.requestLayout.next();\r\n    this.logger.log('measure: exit');\r\n  }\r\n\r\n  protected createView(index: number): Promise<ViewRef> {\r\n    const item = this._collection[index];\r\n    const view = this.createViewForItem(index, item);\r\n    return Promise.resolve(view);\r\n  }\r\n}\r\n\r\nexport function getTypeNameForDebugging(type: any): string {\r\n  return type['name'] || typeof type;\r\n}\r\n","import {\r\n    Directive,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    isDevMode,\r\n    IterableDiffers,\r\n    NgIterable,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    TrackByFunction,\r\n    ViewContainerRef,\r\n    ViewRef\r\n} from '@angular/core';\r\nimport { VirtualRepeatBase, VirtualRepeatRow } from './virtual-repeat.base';\r\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\r\nimport { LoggerService } from './logger.service';\r\n\r\nexport interface IAsynchCollection<T> {\r\n    getLength(): Promise<number>;\r\n    getItem(i: number): Promise<T>;\r\n}\r\n\r\n@Directive({\r\n    // tslint:disable-next-line:directive-selector\r\n    selector: '[virtualRepeatAsynch]'\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class VirtualRepeatAsynch<T> extends VirtualRepeatBase<T> implements OnChanges, OnInit, OnDestroy {\r\n\r\n    protected _collection: IAsynchCollection<T>;\r\n\r\n    @Input() virtualRepeatAsynchOf: NgIterable<T>;\r\n\r\n    @Input()\r\n    set virtualRepeatAsynchForTrackBy(fn: TrackByFunction<T>) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\r\n            if (<any>console && <any>console.warn) {\r\n                console.warn(\r\n                    `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation` +\r\n                    ` for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n\r\n    get virtualRepeatAsynchForTrackBy(): TrackByFunction<T> {\r\n        return this._trackByFn;\r\n    }\r\n\r\n    @Input()\r\n    set virtualRepeatAsynchForTemplate(value: TemplateRef<VirtualRepeatRow>) {\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n\r\n    constructor(_virtualRepeatContainer: VirtualRepeatContainer,\r\n        _differs: IterableDiffers,\r\n        _template: TemplateRef<VirtualRepeatRow>,\r\n        _viewContainerRef: ViewContainerRef,\r\n        logger: LoggerService\r\n    ) {\r\n        super(_virtualRepeatContainer, _differs, _template, _viewContainerRef, logger);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('virtualRepeatAsynchOf' in changes) {\r\n            this.detachAllViews();\r\n            // React on virtualRepeatAsynchOf only once all inputs have been initialized\r\n            const value = changes['virtualRepeatAsynchOf'].currentValue;\r\n            this._collection = value;\r\n\r\n            this.requestMeasure.next();\r\n        }\r\n    }\r\n\r\n    protected measure() {\r\n        if (!this._collection) { return; }\r\n        this._isInMeasure = true;\r\n        this._virtualRepeatContainer.processing = true;\r\n        this._collection.getLength().then((length) => {\r\n            this._collectionLength = length;\r\n            this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer.getRowHeight() * length;\r\n            this._isInMeasure = false;\r\n            this.requestLayout.next();\r\n        });\r\n    }\r\n\r\n    protected createView(index: number, addBefore: boolean): Promise<ViewRef> {\r\n        let view: ViewRef;\r\n        if (!this._virtualRepeatContainer._autoHeightVariable && !!(view = this._recycler.recoverView())) {\r\n            // recover recycled views. Will be filled with new item once received.\r\n            const embedView = (<EmbeddedViewRef<VirtualRepeatRow>>view);\r\n            embedView.context.index = index;\r\n            embedView.rootNodes[0].style.height = this._virtualRepeatContainer.getRowHeight() + 'px';\r\n            embedView.context.$implicit = this.emptyItem(embedView.context.$implicit);\r\n            view.reattach();\r\n            this._viewContainerRef.insert(view, (addBefore ? 0 : undefined));\r\n        }\r\n\r\n        return this._collection.getItem(index).then((item) => {\r\n            this.createViewForItem(index, item);\r\n            return view;\r\n        });\r\n    }\r\n}\r\n\r\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  isDevMode,\n  IterableDiffers,\n  NgIterable,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  ViewRef\n} from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\n\nimport { VirtualRepeatBase, VirtualRepeatRow, Deferred } from './virtual-repeat.base';\nimport { LoggerService } from './logger.service';\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\n\nexport interface IReactiveCollectionFactory<T> {\n  create(): IReactiveCollection<T>;\n}\n\nexport interface IReactiveCollection<T> {\n  length$: Observable<number>;\n  items$: Observable<{ index: number; item: T }>;\n  reset$: Observable<boolean>;\n\n  connect(): void;\n  disconnect(): void;\n\n  reset(): void;\n\n  requestLength(): void;\n  requestItem(index: number): void;\n}\n\ninterface ForDirectiveContext<T> {\n  $implicit: T;\n  index: number;\n  first: boolean;\n  last: boolean;\n  even: boolean;\n  odd: boolean;\n  count: number;\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[virtualRepeatReactive]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class VirtualRepeatReactive<T> extends VirtualRepeatBase<T> implements OnChanges, OnInit, OnDestroy {\n  static ngTemplateContextGuard<T>(\n    dir: VirtualRepeatReactive<T>,\n    ctx: unknown\n  ): ctx is ForDirectiveContext<T> {\n    return true;\n  }\n\n  @Input()\n  set virtualRepeatReactiveForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      if (<any>console && <any>console.warn) {\n        console.warn(\n          `trackBy must be a function, but received ${JSON.stringify(fn)}.\n          See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation\n          for more information.`\n        );\n      }\n    }\n    this._trackByFn = fn;\n  }\n\n  get virtualRepeatReactiveForTrackBy(): TrackByFunction<T> {\n    return this._trackByFn;\n  }\n\n  @Input()\n  set virtualRepeatReactiveForTemplate(value: TemplateRef<VirtualRepeatRow>) {\n    if (value) {\n      this._template = value;\n    }\n  }\n\n  @Input() virtualRepeatReactiveOf: NgIterable<T>;\n\n  constructor(\n    virtualRepeatContainer: VirtualRepeatContainer,\n    differs: IterableDiffers,\n    template: TemplateRef<VirtualRepeatRow>,\n    viewContainerRef: ViewContainerRef,\n    logger: LoggerService\n  ) {\n    super(virtualRepeatContainer, differs, template, viewContainerRef, logger);\n  }\n\n  protected _collection: IReactiveCollection<T>;\n\n  private _viewDeferreds: { [index: number]: Deferred<ViewRef> } = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('virtualRepeatReactiveOf' in changes) {\n      this.detachAllViews();\n\n      // React on virtualRepeatReactiveOf only once all inputs have been initialized\n      let value = changes['virtualRepeatReactiveOf'].currentValue;\n      if (!value) {\n        return;\n      }\n\n      if (value.create !== undefined) {\n        // is factory?\n        value = value.create(); // create reactive collection\n      }\n      this._collection = value;\n      this._collection.connect();\n      this.logger.log('ngOnChanges: this._collection asigned.');\n\n      this._subscription.add(\n        this._collection.length$.subscribe(\n          lenght => this.onLength(lenght),\n          error => {\n            this.onLength(0);\n          }\n        )\n      );\n      this._subscription.add(\n        this._collection.items$.subscribe(data => {\n          try {\n            this.onItem(data);\n          } catch (exc) {\n            this.logger.log('onItem: Exception', exc);\n          }\n        })\n      );\n\n      this._subscription.add(\n        this._collection.reset$.subscribe(() => {\n          this.reset();\n        })\n      );\n\n      this.requestMeasure.next();\n    }\n  }\n\n  protected connect() {\n    super.connect();\n  }\n\n  protected disconnect() {\n    super.disconnect();\n    if (!!this._collection) {\n      this._collection.disconnect();\n    }\n  }\n\n  protected measure() {\n    this.logger.log('measure: enter');\n    if (!this._collection) {\n      this.logger.log('measure: !this._collection. Exit');\n      return;\n    }\n\n    this._virtualRepeatContainer.processing = true;\n\n    this.logger.log('measure: requestLength -> onLength');\n    this._collection.requestLength();\n  }\n\n  onLength(length: number) {\n    this.logger.log('onLength: enter', this._collectionLength, length);\n\n    this._isInMeasure = true;\n    this._collectionLength = length;\n    this._virtualRepeatContainer.holderHeight = this._virtualRepeatContainer.getRowHeight() * length;\n    // calculate a approximate number of which a view can contain\n    this._isInMeasure = false;\n    this.logger.log('onLength: requestLayout');\n    if (length > 0) {\n      this.requestLayout.next();\n    } else {\n      this._virtualRepeatContainer.processing = false;\n    }\n  }\n\n  protected createView(index: number, addBefore: boolean): Promise<ViewRef> {\n    this.logger.log('createView: requestItem: ', index);\n    let view;\n    if (!this._virtualRepeatContainer._autoHeightVariable && !!(view = this._recycler.recoverView())) {\n      // recover recycled views. Will be filled with new item once received.\n      const embedView = <EmbeddedViewRef<VirtualRepeatRow>>view;\n      embedView.context.index = index;\n      embedView.rootNodes[0].style.height = this._virtualRepeatContainer.getRowHeight() + 'px';\n      embedView.context.$implicit = this.emptyItem(embedView.context.$implicit);\n      embedView.context.recycled = true;\n      this._viewContainerRef.insert(view, addBefore ? 0 : undefined);\n      view.reattach();\n    }\n\n    this.logger.log('createView: _viewDeferreds add: ', index);\n    this._viewDeferreds[index] = new Deferred();\n    this._collection.requestItem(index);\n\n    return this._viewDeferreds[index].promise;\n  }\n\n  onItem(data: { index: number; item: T }) {\n    const { index, item } = data;\n    this.logger.log('onItem: enter', index, item);\n    const view = this.createViewForItem(index, item);\n    if (this._viewDeferreds[index]) {\n      this.logger.log('onItem: _viewPromises resolve: ', index);\n      this._viewDeferreds[index].resolve(view);\n    }\n  }\n\n  onProcessing(processing: boolean): any {\n    if (!processing) {\n      // processing finished\n      this.logger.log('onProcessing: _viewDeferreds deleting');\n      this._viewDeferreds = [];\n    }\n    super.onProcessing(processing);\n  }\n}\n","import { VirtualRepeat } from './virtual-repeat-collection';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { VirtualRepeatContainer } from './virtual-repeat-container';\nimport { VirtualRepeatAsynch } from './virtual-repeat-asynch';\nimport { VirtualRepeatReactive } from './virtual-repeat-reactive';\nimport { LoggerService } from './logger.service';\n\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    VirtualRepeatContainer,\n    VirtualRepeat,\n    VirtualRepeatAsynch,\n    VirtualRepeatReactive\n  ],\n  providers: [\n    LoggerService\n  ],\n  exports: [\n    VirtualRepeatContainer,\n    VirtualRepeat,\n    VirtualRepeatAsynch,\n    VirtualRepeatReactive\n  ]\n})\nexport class VirtualRepeatAngularLibModule { }\n","/*\n * Public API Surface of virtual-repeat-angular-lib\n */\nexport * from './lib/logger.service';\nexport * from './lib/rxjs.operators';\nexport * from './lib/virtual-repeat-container';\nexport * from './lib/virtual-repeat-collection';\nexport * from './lib/virtual-repeat-asynch';\nexport * from './lib/virtual-repeat-reactive';\nexport * from './lib/virtual-repeat-angular-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.LoggerService","i1.VirtualRepeatContainer","i2.LoggerService"],"mappings":"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"}